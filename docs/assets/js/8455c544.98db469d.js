(self.webpackChunk_3_l_1_b=self.webpackChunk_3_l_1_b||[]).push([[985],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||l;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var s=2;s<l;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8286:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return i},toc:function(){return u},default:function(){return c}});var r=n(2122),o=n(9756),l=(n(7294),n(3905)),a={},i={unversionedId:"Functions/led",id:"Functions/led",isDocsHomePage:!1,title:"led()",description:"led(int led, [bool state])",source:"@site/docs/Functions/led.md",sourceDirName:"Functions",slug:"/Functions/led",permalink:"/docs/Functions/led",editUrl:"https://github.com/hapiel/3L1B/edit/master/docusaurus/docs/Functions/led.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"debounceTime()",permalink:"/docs/Functions/debounceTime"},next:{title:"ledAll()",permalink:"/docs/Functions/ledAll"}},u=[],s={toc:u};function c(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"led(int led, [bool state])")),(0,l.kt)("p",null,"Returns ",(0,l.kt)("em",{parentName:"p"},"bool")),(0,l.kt)("p",null,"The led function can be use to read and write the leds or lights. "),(0,l.kt)("p",null,"The first argument is an integer, 0, 1 or 2 to select the led. "),(0,l.kt)("p",null,"The second argument is to write the state of the led and can be set to ",(0,l.kt)("inlineCode",{parentName:"p"},"HIGH")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"LOW"),", but also to its equivalents ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"1")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"0"),". You might see any of these systems used in the example code. If no second argument is used, this function only returns the current state of the selected led."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"void loop() {\n  \n  // if the button is held down\n  if (tlob.buttonDown){\n     // turn the first led on\n    tlob.led(0, HIGH);\n  } else {\n    // turn the first led off\n    tlob.led(0, LOW);\n  }\n\n  // update the button state\n  tlob.update();\n}\n")),(0,l.kt)("p",null,"In order to toggle the led, so as to turn it on if it was off or off if it was on, you can read the current state and use ",(0,l.kt)("inlineCode",{parentName:"p"},"!")," to get the opposite of that."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"void loop() {\n  \n  // if the button is pressed\n  if (tlob.buttonPressed){\n     // toggle the first led\n    tlob.led(0, !tlob.led(0));\n  } \n\n  // update the button state\n  tlob.update();\n}\n")))}c.isMDXComponent=!0}}]);