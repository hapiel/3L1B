{"version":3,"sources":["../../node_modules/avr8js/dist/esm/cpu/interrupt.js","../../node_modules/avr8js/dist/esm/cpu/cpu.js","../../node_modules/avr8js/dist/esm/cpu/instruction.js","../../node_modules/avr8js/dist/esm/peripherals/gpio.js","../../node_modules/avr8js/dist/esm/peripherals/timer.js","../../node_modules/avr8js/dist/esm/peripherals/usart.js","../../node_modules/avr8js/dist/esm/peripherals/eeprom.js","../../node_modules/avr8js/dist/esm/peripherals/twi.js","../../node_modules/avr8js/dist/esm/peripherals/spi.js","../../node_modules/avr8js/dist/esm/peripherals/clock.js","../../node_modules/avr8js/dist/esm/index.js","intelhex.js","emulator.js","../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["avrInterrupt","cpu","addr","sp","dataView","getUint16","data","pc","pc22Bits","setUint16","cycles","registerSpace","CPU","constructor","progMem","sramBytes","Uint8Array","data16","Uint16Array","buffer","DataView","progBytes","readHooks","writeHooks","pendingInterrupts","clockEvents","length","gpioTimerHooks","nextInterrupt","nextClockEvent","reset","fill","SP","splice","readData","writeData","value","hook","SREG","interruptsEnabled","updateNextInterrupt","findIndex","item","setInterruptFlag","interrupt","flagRegister","flagMask","enableRegister","enableMask","inverseFlag","queueInterrupt","updateInterruptEnable","registerValue","clearInterrupt","address","clearFlag","clearInterruptByFlag","addClockEvent","callback","entry","Math","max","push","unshift","i","updateClockEvent","clearClockEvent","_a","_b","index","tick","_c","shift","constant","isTwoWordInstruction","opcode","avrInstruction","d","r","sum","R","sreg","b","k","ret","A","val1","val2","arg1","arg2","nextOpcode","skipSize","retAddr","eind","rampz","v1","v2","getInt8","setInt16","clear","set","x","y","z","r2","d2","target","a","l","portAConfig","PIN","DDR","PORT","portBConfig","portCConfig","portDConfig","portEConfig","portFConfig","portGConfig","portHConfig","portJConfig","portKConfig","portLConfig","PinState","PinOverrideMode","AVRIOPort","portConfig","listeners","pinValue","overrideMask","lastValue","lastDdr","portValue","updatePinRegister","writeGpio","ddrMask","oldPortValue","pin","mode","pinMask","None","Enable","overrideValue","Set","Clear","Toggle","addListener","listener","removeListener","filter","pinState","ddr","port","bitMask","High","Low","InputPullUp","Input","setPin","newValue","prevValue","timer01Dividers","defaultTimerBits","TOV","OCFA","OCFB","TOIE","OCIEA","OCIEB","timer0Config","Object","assign","bits","captureInterrupt","compAInterrupt","compBInterrupt","ovfInterrupt","TIFR","OCRA","OCRB","ICR","TCNT","TCCRA","TCCRB","TCCRC","TIMSK","dividers","compPortA","compPinA","compPortB","compPinB","timer1Config","timer2Config","TimerMode","TOVUpdateMode","OCRUpdateMode","TopOCRA","TopICR","OCToggle","Normal","PWMPhaseCorrect","CTC","FastPWM","Reserved","PWMPhaseFrequencyCorrect","wgmModes8Bit","Immediate","Max","Top","Bottom","wgmModes16Bit","compToOverride","comp","AVRTimer","config","MAX","lastCycle","ocrA","nextOcrA","ocrB","nextOcrB","ocrUpdateMode","tovUpdateMode","icr","tcnt","tcntNext","tcntUpdated","updateDivider","countingUp","divider","highByteTemp","OVF","count","reschedule","delta","counterDelta","floor","val","timerMode","TOP","phasePwm","newVal","phasePwmCount","overflow","timerUpdated","compA","compB","updateCompPin","newDivider","CS","updateWGMConfig","updateTempRegister","WGM","mask","topValue","wgmModes","flags","pwmMode","prevCompA","updateCompA","prevCompB","updateCompB","compValue","pinName","bottom","invertingMode","isSet","usart0Config","rxCompleteInterrupt","dataRegisterEmptyInterrupt","txCompleteInterrupt","UCSRA","UCSRB","UCSRC","UBRRL","UBRRH","UDR","UCSRA_RXC","UCSRA_TXC","UCSRA_UDRE","UCSRA_FE","UCSRA_DOR","UCSRA_UPE","UCSRA_U2X","UCSRA_MPCM","UCSRB_RXCIE","UCSRB_TXCIE","UCSRB_UDRIE","UCSRB_RXEN","UCSRB_TXEN","UCSRB_UCSZ2","UCSRB_RXB8","UCSRB_TXB8","UCSRC_UMSEL1","UCSRC_UMSEL0","UCSRC_UPM1","UCSRC_UPM0","UCSRC_USBS","UCSRC_UCSZ1","UCSRC_UCSZ0","UCSRC_UCPOL","rxMasks","AVRUSART","freqHz","onByteTransmit","onLineTransmit","onRxComplete","rxBusyValue","rxByte","lineBuffer","RXC","UDRE","TXC","oldValue","bitsPerChar","result","ch","String","fromCharCode","cyclesPerChar","rxBusy","writeByte","call","symbolsPerChar","stopBits","parityEnabled","UBRR","multiplier","baudRate","ucsz","parityOdd","EEPROMMemoryBackend","size","memory","readMemory","writeMemory","eraseMemory","eepromConfig","eepromReadyInterrupt","EECR","EEDR","EEARL","EEARH","eraseCycles","writeCycles","EERE","EEPE","EEMPE","EERIE","EEPM0","EEPM1","AVREEPROM","backend","writeEnabledCycles","writeCompleteCycles","EER","eecr","eempeCycles","eedr","TWCR_TWINT","TWCR_TWEA","TWCR_TWSTA","TWCR_TWSTO","TWCR_TWWC","TWCR_TWEN","TWCR_TWIE","TWSR_TWS_MASK","TWSR_TWPS1","TWSR_TWPS0","TWSR_TWPS_MASK","TWAR_TWA_MASK","TWAR_TWGCE","STATUS_BUS_ERROR","STATUS_TWI_IDLE","STATUS_START","STATUS_REPEATED_START","STATUS_SLAW_ACK","STATUS_SLAW_NACK","STATUS_DATA_SENT_ACK","STATUS_DATA_SENT_NACK","STATUS_DATA_LOST_ARBITRATION","STATUS_SLAR_ACK","STATUS_SLAR_NACK","STATUS_DATA_RECEIVED_ACK","STATUS_DATA_RECEIVED_NACK","twiConfig","twiInterrupt","TWBR","TWSR","TWAR","TWDR","TWCR","TWAMR","NoopTWIEventHandler","twi","start","completeStart","stop","completeStop","connectToSlave","completeConnect","completeWrite","readByte","completeRead","AVRTWI","eventHandler","TWI","updateStatus","clearInt","status","twdrValue","ack","prescaler","Error","sclFrequency","SPCR_SPIE","SPCR_SPE","SPCR_DORD","SPCR_MSTR","SPCR_CPOL","SPCR_CPHA","SPCR_SPR1","SPCR_SPR0","SPSR_SPR_MASK","SPSR_SPIF","SPSR_WCOL","SPSR_SPI2X","spiConfig","spiInterrupt","SPCR","SPSR","SPDR","bitsPerByte","AVRSPI","onTransfer","transmissionActive","receivedByte","SPI","cyclesToComplete","clockDivider","isMaster","dataOrder","spiMode","CPHA","CPOL","base","spiFrequency","CLKPCE","clockConfig","CLKPR","prescalers","AVRClock","baseFreqHz","clockEnabledCycles","prescalerValue","cyclesDelta","clkpr","oldPrescaler","frequency","timeNanos","timeMicros","timeMillis","loadHex","source","line","split","substr","bytes","parseInt","Emulator","leds","button","frameId","timer0","portA","portB","portC","portD","cache","program","clockFrequency","flashSize","loadGame","hex","temp","avr8js","usart","initPorts","initSerialCommunication","enableAnalogRead","state","domElement","addEventListener","buttonPressHandler","buttonReleaseHandler","ledHandler","rawvalue","console","log","analogValue","random","avrPort","avrPin","connectedLeds","led","classList","remove","add","executeGame","deadline","requestAnimationFrame","stopGame","cancelAnimationFrame","window","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Array","isArray","concat","Function","deps","cached","some","cb"],"mappings":"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","file":"emulator.js","sourceRoot":"../src","sourcesContent":["/**\r\n * AVR-8 Interrupt Handling\r\n * Part of AVR8js\r\n * Reference: http://ww1.microchip.com/downloads/en/devicedoc/atmel-0856-avr-instruction-set-manual.pdf\r\n *\r\n * Copyright (C) 2019, Uri Shaked\r\n */\r\nexport function avrInterrupt(cpu, addr) {\r\n    const sp = cpu.dataView.getUint16(93, true);\r\n    cpu.data[sp] = cpu.pc & 0xff;\r\n    cpu.data[sp - 1] = (cpu.pc >> 8) & 0xff;\r\n    if (cpu.pc22Bits) {\r\n        cpu.data[sp - 2] = (cpu.pc >> 16) & 0xff;\r\n    }\r\n    cpu.dataView.setUint16(93, sp - (cpu.pc22Bits ? 3 : 2), true);\r\n    cpu.data[95] &= 0x7f; // clear global interrupt flag\r\n    cpu.cycles += 2;\r\n    cpu.pc = addr;\r\n}\r\n","/**\r\n * AVR 8 CPU data structures\r\n * Part of AVR8js\r\n *\r\n * Copyright (C) 2019, Uri Shaked\r\n */\r\nimport { avrInterrupt } from './interrupt';\r\nconst registerSpace = 0x100;\r\nexport class CPU {\r\n    constructor(progMem, sramBytes = 8192) {\r\n        this.progMem = progMem;\r\n        this.sramBytes = sramBytes;\r\n        this.data = new Uint8Array(this.sramBytes + registerSpace);\r\n        this.data16 = new Uint16Array(this.data.buffer);\r\n        this.dataView = new DataView(this.data.buffer);\r\n        this.progBytes = new Uint8Array(this.progMem.buffer);\r\n        this.readHooks = [];\r\n        this.writeHooks = [];\r\n        this.pendingInterrupts = [];\r\n        this.clockEvents = [];\r\n        this.pc22Bits = this.progBytes.length > 0x20000;\r\n        // This lets the Timer Compare output override GPIO pins:\r\n        this.gpioTimerHooks = [];\r\n        this.pc = 0;\r\n        this.cycles = 0;\r\n        this.nextInterrupt = -1;\r\n        this.nextClockEvent = 0;\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.data.fill(0);\r\n        this.SP = this.data.length - 1;\r\n        this.pendingInterrupts.splice(0, this.pendingInterrupts.length);\r\n        this.nextInterrupt = -1;\r\n    }\r\n    readData(addr) {\r\n        if (addr >= 32 && this.readHooks[addr]) {\r\n            return this.readHooks[addr](addr);\r\n        }\r\n        return this.data[addr];\r\n    }\r\n    writeData(addr, value) {\r\n        const hook = this.writeHooks[addr];\r\n        if (hook) {\r\n            if (hook(value, this.data[addr], addr)) {\r\n                return;\r\n            }\r\n        }\r\n        this.data[addr] = value;\r\n    }\r\n    get SP() {\r\n        return this.dataView.getUint16(93, true);\r\n    }\r\n    set SP(value) {\r\n        this.dataView.setUint16(93, value, true);\r\n    }\r\n    get SREG() {\r\n        return this.data[95];\r\n    }\r\n    get interruptsEnabled() {\r\n        return this.SREG & 0x80 ? true : false;\r\n    }\r\n    updateNextInterrupt() {\r\n        this.nextInterrupt = this.pendingInterrupts.findIndex((item) => !!item);\r\n    }\r\n    setInterruptFlag(interrupt) {\r\n        const { flagRegister, flagMask, enableRegister, enableMask } = interrupt;\r\n        if (interrupt.inverseFlag) {\r\n            this.data[flagRegister] &= ~flagMask;\r\n        }\r\n        else {\r\n            this.data[flagRegister] |= flagMask;\r\n        }\r\n        if (this.data[enableRegister] & enableMask) {\r\n            this.queueInterrupt(interrupt);\r\n        }\r\n    }\r\n    updateInterruptEnable(interrupt, registerValue) {\r\n        const { enableMask, flagRegister, flagMask } = interrupt;\r\n        if (registerValue & enableMask) {\r\n            if (this.data[flagRegister] & flagMask) {\r\n                this.queueInterrupt(interrupt);\r\n            }\r\n        }\r\n        else {\r\n            this.clearInterrupt(interrupt, false);\r\n        }\r\n    }\r\n    queueInterrupt(interrupt) {\r\n        this.pendingInterrupts[interrupt.address] = interrupt;\r\n        this.updateNextInterrupt();\r\n    }\r\n    clearInterrupt({ address, flagRegister, flagMask }, clearFlag = true) {\r\n        delete this.pendingInterrupts[address];\r\n        if (clearFlag) {\r\n            this.data[flagRegister] &= ~flagMask;\r\n        }\r\n        this.updateNextInterrupt();\r\n    }\r\n    clearInterruptByFlag(interrupt, registerValue) {\r\n        const { flagRegister, flagMask } = interrupt;\r\n        if (registerValue & flagMask) {\r\n            this.data[flagRegister] &= ~flagMask;\r\n            this.clearInterrupt(interrupt);\r\n        }\r\n    }\r\n    addClockEvent(callback, cycles) {\r\n        const entry = { cycles: this.cycles + Math.max(1, cycles), callback };\r\n        // Add the new entry while keeping the array sorted\r\n        const { clockEvents } = this;\r\n        if (!clockEvents.length || clockEvents[clockEvents.length - 1].cycles <= entry.cycles) {\r\n            clockEvents.push(entry);\r\n        }\r\n        else if (clockEvents[0].cycles >= entry.cycles) {\r\n            clockEvents.unshift(entry);\r\n        }\r\n        else {\r\n            for (let i = 1; i < clockEvents.length; i++) {\r\n                if (clockEvents[i].cycles >= entry.cycles) {\r\n                    clockEvents.splice(i, 0, entry);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.nextClockEvent = this.clockEvents[0].cycles;\r\n        return callback;\r\n    }\r\n    updateClockEvent(callback, cycles) {\r\n        if (this.clearClockEvent(callback)) {\r\n            this.addClockEvent(callback, cycles);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    clearClockEvent(callback) {\r\n        var _a, _b;\r\n        const index = this.clockEvents.findIndex((item) => item.callback === callback);\r\n        if (index >= 0) {\r\n            this.clockEvents.splice(index, 1);\r\n            this.nextClockEvent = (_b = (_a = this.clockEvents[0]) === null || _a === void 0 ? void 0 : _a.cycles) !== null && _b !== void 0 ? _b : 0;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    tick() {\r\n        var _a, _b, _c;\r\n        const { nextClockEvent, clockEvents } = this;\r\n        if (nextClockEvent && nextClockEvent <= this.cycles) {\r\n            (_a = clockEvents.shift()) === null || _a === void 0 ? void 0 : _a.callback();\r\n            this.nextClockEvent = (_c = (_b = clockEvents[0]) === null || _b === void 0 ? void 0 : _b.cycles) !== null && _c !== void 0 ? _c : 0;\r\n        }\r\n        const { nextInterrupt } = this;\r\n        if (this.interruptsEnabled && nextInterrupt >= 0) {\r\n            const interrupt = this.pendingInterrupts[nextInterrupt];\r\n            avrInterrupt(this, interrupt.address);\r\n            if (!interrupt.constant) {\r\n                this.clearInterrupt(interrupt);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * AVR-8 Instruction Simulation\r\n * Part of AVR8js\r\n *\r\n * Reference: http://ww1.microchip.com/downloads/en/devicedoc/atmel-0856-avr-instruction-set-manual.pdf\r\n *\r\n * Instruction timing is currently based on ATmega328p (see the Instruction Set Summary at the end of\r\n * the datasheet)\r\n *\r\n * Copyright (C) 2019, 2020 Uri Shaked\r\n */\r\nfunction isTwoWordInstruction(opcode) {\r\n    return (\r\n    /* LDS */\r\n    (opcode & 0xfe0f) === 0x9000 ||\r\n        /* STS */\r\n        (opcode & 0xfe0f) === 0x9200 ||\r\n        /* CALL */\r\n        (opcode & 0xfe0e) === 0x940e ||\r\n        /* JMP */\r\n        (opcode & 0xfe0e) === 0x940c);\r\n}\r\nexport function avrInstruction(cpu) {\r\n    const opcode = cpu.progMem[cpu.pc];\r\n    if ((opcode & 0xfc00) === 0x1c00) {\r\n        /* ADC, 0001 11rd dddd rrrr */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const sum = d + r + (cpu.data[95] & 1);\r\n        const R = sum & 255;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (R ^ r) & (d ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= sum & 256 ? 1 : 0;\r\n        sreg |= 1 & ((d & r) | (r & ~R) | (~R & d)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0xc00) {\r\n        /* ADD, 0000 11rd dddd rrrr */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const R = (d + r) & 255;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (R ^ r) & (R ^ d) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= (d + r) & 256 ? 1 : 0;\r\n        sreg |= 1 & ((d & r) | (r & ~R) | (~R & d)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9600) {\r\n        /* ADIW, 1001 0110 KKdd KKKK */\r\n        const addr = 2 * ((opcode & 0x30) >> 4) + 24;\r\n        const value = cpu.dataView.getUint16(addr, true);\r\n        const R = (value + ((opcode & 0xf) | ((opcode & 0xc0) >> 2))) & 0xffff;\r\n        cpu.dataView.setUint16(addr, R, true);\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 0x8000 & R ? 4 : 0;\r\n        sreg |= ~value & R & 0x8000 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= ~R & value & 0x8000 ? 1 : 0;\r\n        cpu.data[95] = sreg;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2000) {\r\n        /* AND, 0010 00rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] & cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x7000) {\r\n        /* ANDI, 0111 KKKK dddd KKKK */\r\n        const R = cpu.data[((opcode & 0xf0) >> 4) + 16] & ((opcode & 0xf) | ((opcode & 0xf00) >> 4));\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9405) {\r\n        /* ASR, 1001 010d dddd 0101 */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = (value >>> 1) | (128 & value);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= value & 1;\r\n        sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff8f) === 0x9488) {\r\n        /* BCLR, 1001 0100 1sss 1000 */\r\n        cpu.data[95] &= ~(1 << ((opcode & 0x70) >> 4));\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xf800) {\r\n        /* BLD, 1111 100d dddd 0bbb */\r\n        const b = opcode & 7;\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        cpu.data[d] = (~(1 << b) & cpu.data[d]) | (((cpu.data[95] >> 6) & 1) << b);\r\n    }\r\n    else if ((opcode & 0xfc00) === 0xf400) {\r\n        /* BRBC, 1111 01kk kkkk ksss */\r\n        if (!(cpu.data[95] & (1 << (opcode & 7)))) {\r\n            cpu.pc = cpu.pc + (((opcode & 0x1f8) >> 3) - (opcode & 0x200 ? 0x40 : 0));\r\n            cpu.cycles++;\r\n        }\r\n    }\r\n    else if ((opcode & 0xfc00) === 0xf000) {\r\n        /* BRBS, 1111 00kk kkkk ksss */\r\n        if (cpu.data[95] & (1 << (opcode & 7))) {\r\n            cpu.pc = cpu.pc + (((opcode & 0x1f8) >> 3) - (opcode & 0x200 ? 0x40 : 0));\r\n            cpu.cycles++;\r\n        }\r\n    }\r\n    else if ((opcode & 0xff8f) === 0x9408) {\r\n        /* BSET, 1001 0100 0sss 1000 */\r\n        cpu.data[95] |= 1 << ((opcode & 0x70) >> 4);\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xfa00) {\r\n        /* BST, 1111 101d dddd 0bbb */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const b = opcode & 7;\r\n        cpu.data[95] = (cpu.data[95] & 0xbf) | ((d >> b) & 1 ? 0x40 : 0);\r\n    }\r\n    else if ((opcode & 0xfe0e) === 0x940e) {\r\n        /* CALL, 1001 010k kkkk 111k kkkk kkkk kkkk kkkk */\r\n        const k = cpu.progMem[cpu.pc + 1] | ((opcode & 1) << 16) | ((opcode & 0x1f0) << 13);\r\n        const ret = cpu.pc + 2;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        const { pc22Bits } = cpu;\r\n        cpu.data[sp] = 255 & ret;\r\n        cpu.data[sp - 1] = (ret >> 8) & 255;\r\n        if (pc22Bits) {\r\n            cpu.data[sp - 2] = (ret >> 16) & 255;\r\n        }\r\n        cpu.dataView.setUint16(93, sp - (pc22Bits ? 3 : 2), true);\r\n        cpu.pc = k - 1;\r\n        cpu.cycles += pc22Bits ? 4 : 3;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9800) {\r\n        /* CBI, 1001 1000 AAAA Abbb */\r\n        const A = opcode & 0xf8;\r\n        const b = opcode & 7;\r\n        const R = cpu.readData((A >> 3) + 32);\r\n        cpu.writeData((A >> 3) + 32, R & ~(1 << b));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9400) {\r\n        /* COM, 1001 010d dddd 0000 */\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        const R = 255 - cpu.data[d];\r\n        cpu.data[d] = R;\r\n        let sreg = (cpu.data[95] & 0xe1) | 1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x1400) {\r\n        /* CP, 0001 01rd dddd rrrr */\r\n        const val1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const R = val1 - val2;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= 0 !== ((val1 ^ val2) & (val1 ^ R) & 128) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= val2 > val1 ? 1 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x400) {\r\n        /* CPC, 0000 01rd dddd rrrr */\r\n        const arg1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const arg2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        let sreg = cpu.data[95];\r\n        const r = arg1 - arg2 - (sreg & 1);\r\n        sreg = (sreg & 0xc0) | (!r && (sreg >> 1) & 1 ? 2 : 0) | (arg2 + (sreg & 1) > arg1 ? 1 : 0);\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= (arg1 ^ arg2) & (arg1 ^ r) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= 1 & ((~arg1 & arg2) | (arg2 & r) | (r & ~arg1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x3000) {\r\n        /* CPI, 0011 KKKK dddd KKKK */\r\n        const arg1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\r\n        const arg2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n        const r = arg1 - arg2;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= r ? 0 : 2;\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= (arg1 ^ arg2) & (arg1 ^ r) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= arg2 > arg1 ? 1 : 0;\r\n        sreg |= 1 & ((~arg1 & arg2) | (arg2 & r) | (r & ~arg1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x1000) {\r\n        /* CPSE, 0001 00rd dddd rrrr */\r\n        if (cpu.data[(opcode & 0x1f0) >> 4] === cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)]) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.pc += skipSize;\r\n            cpu.cycles += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x940a) {\r\n        /* DEC, 1001 010d dddd 1010 */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = value - 1;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= 128 === value ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if (opcode === 0x9519) {\r\n        /* EICALL, 1001 0101 0001 1001 */\r\n        const retAddr = cpu.pc + 1;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        const eind = cpu.data[0x5c];\r\n        cpu.data[sp] = retAddr & 255;\r\n        cpu.data[sp - 1] = (retAddr >> 8) & 255;\r\n        cpu.data[sp - 2] = (retAddr >> 16) & 255;\r\n        cpu.dataView.setUint16(93, sp - 3, true);\r\n        cpu.pc = ((eind << 16) | cpu.dataView.getUint16(30, true)) - 1;\r\n        cpu.cycles += 3;\r\n    }\r\n    else if (opcode === 0x9419) {\r\n        /* EIJMP, 1001 0100 0001 1001 */\r\n        const eind = cpu.data[0x5c];\r\n        cpu.pc = ((eind << 16) | cpu.dataView.getUint16(30, true)) - 1;\r\n        cpu.cycles++;\r\n    }\r\n    else if (opcode === 0x95d8) {\r\n        /* ELPM, 1001 0101 1101 1000 */\r\n        const rampz = cpu.data[0x5b];\r\n        cpu.data[0] = cpu.progBytes[(rampz << 16) | cpu.dataView.getUint16(30, true)];\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9006) {\r\n        /* ELPM(REG), 1001 000d dddd 0110 */\r\n        const rampz = cpu.data[0x5b];\r\n        cpu.data[(opcode & 0x1f0) >> 4] =\r\n            cpu.progBytes[(rampz << 16) | cpu.dataView.getUint16(30, true)];\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9007) {\r\n        /* ELPM(INC), 1001 000d dddd 0111 */\r\n        const rampz = cpu.data[0x5b];\r\n        const i = cpu.dataView.getUint16(30, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.progBytes[(rampz << 16) | i];\r\n        cpu.dataView.setUint16(30, i + 1, true);\r\n        if (i === 0xffff) {\r\n            cpu.data[0x5b] = (rampz + 1) % (cpu.progBytes.length >> 16);\r\n        }\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2400) {\r\n        /* EOR, 0010 01rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] ^ cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x308) {\r\n        /* FMUL, 0000 0011 0ddd 1rrr */\r\n        const v1 = cpu.data[((opcode & 0x70) >> 4) + 16];\r\n        const v2 = cpu.data[(opcode & 7) + 16];\r\n        const R = (v1 * v2) << 1;\r\n        cpu.dataView.setUint16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | ((v1 * v2) & 0x8000 ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x380) {\r\n        /* FMULS, 0000 0011 1ddd 0rrr */\r\n        const v1 = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16);\r\n        const v2 = cpu.dataView.getInt8((opcode & 7) + 16);\r\n        const R = (v1 * v2) << 1;\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | ((v1 * v2) & 0x8000 ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x388) {\r\n        /* FMULSU, 0000 0011 1ddd 1rrr */\r\n        const v1 = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16);\r\n        const v2 = cpu.data[(opcode & 7) + 16];\r\n        const R = (v1 * v2) << 1;\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 2 : 0) | ((v1 * v2) & 0x8000 ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if (opcode === 0x9509) {\r\n        /* ICALL, 1001 0101 0000 1001 */\r\n        const retAddr = cpu.pc + 1;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        const { pc22Bits } = cpu;\r\n        cpu.data[sp] = retAddr & 255;\r\n        cpu.data[sp - 1] = (retAddr >> 8) & 255;\r\n        if (pc22Bits) {\r\n            cpu.data[sp - 2] = (retAddr >> 16) & 255;\r\n        }\r\n        cpu.dataView.setUint16(93, sp - (pc22Bits ? 3 : 2), true);\r\n        cpu.pc = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.cycles += pc22Bits ? 3 : 2;\r\n    }\r\n    else if (opcode === 0x9409) {\r\n        /* IJMP, 1001 0100 0000 1001 */\r\n        cpu.pc = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xf800) === 0xb000) {\r\n        /* IN, 1011 0AAd dddd AAAA */\r\n        const i = cpu.readData(((opcode & 0xf) | ((opcode & 0x600) >> 5)) + 32);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = i;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9403) {\r\n        /* INC, 1001 010d dddd 0011 */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = (d + 1) & 255;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = r;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= r ? 0 : 2;\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= 127 === d ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfe0e) === 0x940c) {\r\n        /* JMP, 1001 010k kkkk 110k kkkk kkkk kkkk kkkk */\r\n        cpu.pc = (cpu.progMem[cpu.pc + 1] | ((opcode & 1) << 16) | ((opcode & 0x1f0) << 13)) - 1;\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9206) {\r\n        /* LAC, 1001 001r rrrr 0110 */\r\n        const r = (opcode & 0x1f0) >> 4;\r\n        const clear = cpu.data[r];\r\n        const value = cpu.readData(cpu.dataView.getUint16(30, true));\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), value & (255 - clear));\r\n        cpu.data[r] = value;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9205) {\r\n        /* LAS, 1001 001r rrrr 0101 */\r\n        const r = (opcode & 0x1f0) >> 4;\r\n        const set = cpu.data[r];\r\n        const value = cpu.readData(cpu.dataView.getUint16(30, true));\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), value | set);\r\n        cpu.data[r] = value;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9207) {\r\n        /* LAT, 1001 001r rrrr 0111 */\r\n        const r = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = cpu.readData(cpu.dataView.getUint16(30, true));\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), r ^ R);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n    }\r\n    else if ((opcode & 0xf000) === 0xe000) {\r\n        /* LDI, 1110 KKKK dddd KKKK */\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9000) {\r\n        /* LDS, 1001 000d dddd 0000 kkkk kkkk kkkk kkkk */\r\n        cpu.cycles++;\r\n        const value = cpu.readData(cpu.progMem[cpu.pc + 1]);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = value;\r\n        cpu.pc++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900c) {\r\n        /* LDX, 1001 000d dddd 1100 */\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(26, true));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900d) {\r\n        /* LDX(INC), 1001 000d dddd 1101 */\r\n        const x = cpu.dataView.getUint16(26, true);\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(x);\r\n        cpu.dataView.setUint16(26, x + 1, true);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900e) {\r\n        /* LDX(DEC), 1001 000d dddd 1110 */\r\n        const x = cpu.dataView.getUint16(26, true) - 1;\r\n        cpu.dataView.setUint16(26, x, true);\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(x);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8008) {\r\n        /* LDY, 1000 000d dddd 1000 */\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(28, true));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9009) {\r\n        /* LDY(INC), 1001 000d dddd 1001 */\r\n        const y = cpu.dataView.getUint16(28, true);\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(y);\r\n        cpu.dataView.setUint16(28, y + 1, true);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900a) {\r\n        /* LDY(DEC), 1001 000d dddd 1010 */\r\n        const y = cpu.dataView.getUint16(28, true) - 1;\r\n        cpu.dataView.setUint16(28, y, true);\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(y);\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8008 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* LDDY, 10q0 qq0d dddd 1qqq */\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(28, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8000) {\r\n        /* LDZ, 1000 000d dddd 0000 */\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(30, true));\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9001) {\r\n        /* LDZ(INC), 1001 000d dddd 0001 */\r\n        const z = cpu.dataView.getUint16(30, true);\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(z);\r\n        cpu.dataView.setUint16(30, z + 1, true);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9002) {\r\n        /* LDZ(DEC), 1001 000d dddd 0010 */\r\n        const z = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.dataView.setUint16(30, z, true);\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(z);\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8000 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* LDDZ, 10q0 qq0d dddd 0qqq */\r\n        cpu.cycles++;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.readData(cpu.dataView.getUint16(30, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)));\r\n    }\r\n    else if (opcode === 0x95c8) {\r\n        /* LPM, 1001 0101 1100 1000 */\r\n        cpu.data[0] = cpu.progBytes[cpu.dataView.getUint16(30, true)];\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9004) {\r\n        /* LPM(REG), 1001 000d dddd 0100 */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.progBytes[cpu.dataView.getUint16(30, true)];\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9005) {\r\n        /* LPM(INC), 1001 000d dddd 0101 */\r\n        const i = cpu.dataView.getUint16(30, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.progBytes[i];\r\n        cpu.dataView.setUint16(30, i + 1, true);\r\n        cpu.cycles += 2;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9406) {\r\n        /* LSR, 1001 010d dddd 0110 */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const R = value >>> 1;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= value & 1;\r\n        sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2c00) {\r\n        /* MOV, 0010 11rd dddd rrrr */\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n    }\r\n    else if ((opcode & 0xff00) === 0x100) {\r\n        /* MOVW, 0000 0001 dddd rrrr */\r\n        const r2 = 2 * (opcode & 0xf);\r\n        const d2 = 2 * ((opcode & 0xf0) >> 4);\r\n        cpu.data[d2] = cpu.data[r2];\r\n        cpu.data[d2 + 1] = cpu.data[r2 + 1];\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x9c00) {\r\n        /* MUL, 1001 11rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] * cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.dataView.setUint16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x200) {\r\n        /* MULS, 0000 0010 dddd rrrr */\r\n        const R = cpu.dataView.getInt8(((opcode & 0xf0) >> 4) + 16) * cpu.dataView.getInt8((opcode & 0xf) + 16);\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff88) === 0x300) {\r\n        /* MULSU, 0000 0011 0ddd 0rrr */\r\n        const R = cpu.dataView.getInt8(((opcode & 0x70) >> 4) + 16) * cpu.data[(opcode & 7) + 16];\r\n        cpu.dataView.setInt16(0, R, true);\r\n        cpu.data[95] = (cpu.data[95] & 0xfc) | (0xffff & R ? 0 : 2) | (0x8000 & R ? 1 : 0);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9401) {\r\n        /* NEG, 1001 010d dddd 0001 */\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        const value = cpu.data[d];\r\n        const R = 0 - value;\r\n        cpu.data[d] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= 128 === R ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= R ? 1 : 0;\r\n        sreg |= 1 & (R | value) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if (opcode === 0) {\r\n        /* NOP, 0000 0000 0000 0000 */\r\n        /* NOP */\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x2800) {\r\n        /* OR, 0010 10rd dddd rrrr */\r\n        const R = cpu.data[(opcode & 0x1f0) >> 4] | cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x6000) {\r\n        /* SBR, 0110 KKKK dddd KKKK */\r\n        const R = cpu.data[((opcode & 0xf0) >> 4) + 16] | ((opcode & 0xf) | ((opcode & 0xf00) >> 4));\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        let sreg = cpu.data[95] & 0xe1;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf800) === 0xb800) {\r\n        /* OUT, 1011 1AAr rrrr AAAA */\r\n        cpu.writeData(((opcode & 0xf) | ((opcode & 0x600) >> 5)) + 32, cpu.data[(opcode & 0x1f0) >> 4]);\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x900f) {\r\n        /* POP, 1001 000d dddd 1111 */\r\n        const value = cpu.dataView.getUint16(93, true) + 1;\r\n        cpu.dataView.setUint16(93, value, true);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = cpu.data[value];\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920f) {\r\n        /* PUSH, 1001 001d dddd 1111 */\r\n        const value = cpu.dataView.getUint16(93, true);\r\n        cpu.data[value] = cpu.data[(opcode & 0x1f0) >> 4];\r\n        cpu.dataView.setUint16(93, value - 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xf000) === 0xd000) {\r\n        /* RCALL, 1101 kkkk kkkk kkkk */\r\n        const k = (opcode & 0x7ff) - (opcode & 0x800 ? 0x800 : 0);\r\n        const retAddr = cpu.pc + 1;\r\n        const sp = cpu.dataView.getUint16(93, true);\r\n        const { pc22Bits } = cpu;\r\n        cpu.data[sp] = 255 & retAddr;\r\n        cpu.data[sp - 1] = (retAddr >> 8) & 255;\r\n        if (pc22Bits) {\r\n            cpu.data[sp - 2] = (retAddr >> 16) & 255;\r\n        }\r\n        cpu.dataView.setUint16(93, sp - (pc22Bits ? 3 : 2), true);\r\n        cpu.pc += k;\r\n        cpu.cycles += pc22Bits ? 3 : 2;\r\n    }\r\n    else if (opcode === 0x9508) {\r\n        /* RET, 1001 0101 0000 1000 */\r\n        const { pc22Bits } = cpu;\r\n        const i = cpu.dataView.getUint16(93, true) + (pc22Bits ? 3 : 2);\r\n        cpu.dataView.setUint16(93, i, true);\r\n        cpu.pc = (cpu.data[i - 1] << 8) + cpu.data[i] - 1;\r\n        if (pc22Bits) {\r\n            cpu.pc |= cpu.data[i - 2] << 16;\r\n        }\r\n        cpu.cycles += pc22Bits ? 4 : 3;\r\n    }\r\n    else if (opcode === 0x9518) {\r\n        /* RETI, 1001 0101 0001 1000 */\r\n        const { pc22Bits } = cpu;\r\n        const i = cpu.dataView.getUint16(93, true) + (pc22Bits ? 3 : 2);\r\n        cpu.dataView.setUint16(93, i, true);\r\n        cpu.pc = (cpu.data[i - 1] << 8) + cpu.data[i] - 1;\r\n        if (pc22Bits) {\r\n            cpu.pc |= cpu.data[i - 2] << 16;\r\n        }\r\n        cpu.cycles += pc22Bits ? 4 : 3;\r\n        cpu.data[95] |= 0x80; // Enable interrupts\r\n    }\r\n    else if ((opcode & 0xf000) === 0xc000) {\r\n        /* RJMP, 1100 kkkk kkkk kkkk */\r\n        cpu.pc = cpu.pc + ((opcode & 0x7ff) - (opcode & 0x800 ? 0x800 : 0));\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9407) {\r\n        /* ROR, 1001 010d dddd 0111 */\r\n        const d = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const r = (d >>> 1) | ((cpu.data[95] & 1) << 7);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = r;\r\n        let sreg = cpu.data[95] & 0xe0;\r\n        sreg |= r ? 0 : 2;\r\n        sreg |= 128 & r ? 4 : 0;\r\n        sreg |= 1 & d ? 1 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ (sreg & 1) ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x800) {\r\n        /* SBC, 0000 10rd dddd rrrr */\r\n        const val1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        let sreg = cpu.data[95];\r\n        const R = val1 - val2 - (sreg & 1);\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        sreg = (sreg & 0xc0) | (!R && (sreg >> 1) & 1 ? 2 : 0) | (val2 + (sreg & 1) > val1 ? 1 : 0);\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x4000) {\r\n        /* SBCI, 0100 KKKK dddd KKKK */\r\n        const val1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\r\n        const val2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n        let sreg = cpu.data[95];\r\n        const R = val1 - val2 - (sreg & 1);\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        sreg = (sreg & 0xc0) | (!R && (sreg >> 1) & 1 ? 2 : 0) | (val2 + (sreg & 1) > val1 ? 1 : 0);\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9a00) {\r\n        /* SBI, 1001 1010 AAAA Abbb */\r\n        const target = ((opcode & 0xf8) >> 3) + 32;\r\n        cpu.writeData(target, cpu.readData(target) | (1 << (opcode & 7)));\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9900) {\r\n        /* SBIC, 1001 1001 AAAA Abbb */\r\n        const value = cpu.readData(((opcode & 0xf8) >> 3) + 32);\r\n        if (!(value & (1 << (opcode & 7)))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9b00) {\r\n        /* SBIS, 1001 1011 AAAA Abbb */\r\n        const value = cpu.readData(((opcode & 0xf8) >> 3) + 32);\r\n        if (value & (1 << (opcode & 7))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xff00) === 0x9700) {\r\n        /* SBIW, 1001 0111 KKdd KKKK */\r\n        const i = 2 * ((opcode & 0x30) >> 4) + 24;\r\n        const a = cpu.dataView.getUint16(i, true);\r\n        const l = (opcode & 0xf) | ((opcode & 0xc0) >> 2);\r\n        const R = a - l;\r\n        cpu.dataView.setUint16(i, R, true);\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 0x8000 & R ? 4 : 0;\r\n        sreg |= a & ~R & 0x8000 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= l > a ? 1 : 0;\r\n        sreg |= 1 & ((~a & l) | (l & R) | (R & ~a)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xfc00) {\r\n        /* SBRC, 1111 110r rrrr 0bbb */\r\n        if (!(cpu.data[(opcode & 0x1f0) >> 4] & (1 << (opcode & 7)))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if ((opcode & 0xfe08) === 0xfe00) {\r\n        /* SBRS, 1111 111r rrrr 0bbb */\r\n        if (cpu.data[(opcode & 0x1f0) >> 4] & (1 << (opcode & 7))) {\r\n            const nextOpcode = cpu.progMem[cpu.pc + 1];\r\n            const skipSize = isTwoWordInstruction(nextOpcode) ? 2 : 1;\r\n            cpu.cycles += skipSize;\r\n            cpu.pc += skipSize;\r\n        }\r\n    }\r\n    else if (opcode === 0x9588) {\r\n        /* SLEEP, 1001 0101 1000 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if (opcode === 0x95e8) {\r\n        /* SPM, 1001 0101 1110 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if (opcode === 0x95f8) {\r\n        /* SPM(INC), 1001 0101 1111 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9200) {\r\n        /* STS, 1001 001d dddd 0000 kkkk kkkk kkkk kkkk */\r\n        const value = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const addr = cpu.progMem[cpu.pc + 1];\r\n        cpu.writeData(addr, value);\r\n        cpu.pc++;\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920c) {\r\n        /* STX, 1001 001r rrrr 1100 */\r\n        cpu.writeData(cpu.dataView.getUint16(26, true), cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920d) {\r\n        /* STX(INC), 1001 001r rrrr 1101 */\r\n        const x = cpu.dataView.getUint16(26, true);\r\n        cpu.writeData(x, cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.dataView.setUint16(26, x + 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920e) {\r\n        /* STX(DEC), 1001 001r rrrr 1110 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const x = cpu.dataView.getUint16(26, true) - 1;\r\n        cpu.dataView.setUint16(26, x, true);\r\n        cpu.writeData(x, i);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8208) {\r\n        /* STY, 1000 001r rrrr 1000 */\r\n        cpu.writeData(cpu.dataView.getUint16(28, true), cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9209) {\r\n        /* STY(INC), 1001 001r rrrr 1001 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const y = cpu.dataView.getUint16(28, true);\r\n        cpu.writeData(y, i);\r\n        cpu.dataView.setUint16(28, y + 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x920a) {\r\n        /* STY(DEC), 1001 001r rrrr 1010 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const y = cpu.dataView.getUint16(28, true) - 1;\r\n        cpu.dataView.setUint16(28, y, true);\r\n        cpu.writeData(y, i);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8208 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* STDY, 10q0 qq1r rrrr 1qqq */\r\n        cpu.writeData(cpu.dataView.getUint16(28, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)), cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x8200) {\r\n        /* STZ, 1000 001r rrrr 0000 */\r\n        cpu.writeData(cpu.dataView.getUint16(30, true), cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9201) {\r\n        /* STZ(INC), 1001 001r rrrr 0001 */\r\n        const z = cpu.dataView.getUint16(30, true);\r\n        cpu.writeData(z, cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.dataView.setUint16(30, z + 1, true);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9202) {\r\n        /* STZ(DEC), 1001 001r rrrr 0010 */\r\n        const i = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const z = cpu.dataView.getUint16(30, true) - 1;\r\n        cpu.dataView.setUint16(30, z, true);\r\n        cpu.writeData(z, i);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xd208) === 0x8200 &&\r\n        (opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)) {\r\n        /* STDZ, 10q0 qq1r rrrr 0qqq */\r\n        cpu.writeData(cpu.dataView.getUint16(30, true) +\r\n            ((opcode & 7) | ((opcode & 0xc00) >> 7) | ((opcode & 0x2000) >> 8)), cpu.data[(opcode & 0x1f0) >> 4]);\r\n        cpu.cycles++;\r\n    }\r\n    else if ((opcode & 0xfc00) === 0x1800) {\r\n        /* SUB, 0001 10rd dddd rrrr */\r\n        const val1 = cpu.data[(opcode & 0x1f0) >> 4];\r\n        const val2 = cpu.data[(opcode & 0xf) | ((opcode & 0x200) >> 5)];\r\n        const R = val1 - val2;\r\n        cpu.data[(opcode & 0x1f0) >> 4] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= val2 > val1 ? 1 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xf000) === 0x5000) {\r\n        /* SUBI, 0101 KKKK dddd KKKK */\r\n        const val1 = cpu.data[((opcode & 0xf0) >> 4) + 16];\r\n        const val2 = (opcode & 0xf) | ((opcode & 0xf00) >> 4);\r\n        const R = val1 - val2;\r\n        cpu.data[((opcode & 0xf0) >> 4) + 16] = R;\r\n        let sreg = cpu.data[95] & 0xc0;\r\n        sreg |= R ? 0 : 2;\r\n        sreg |= 128 & R ? 4 : 0;\r\n        sreg |= (val1 ^ val2) & (val1 ^ R) & 128 ? 8 : 0;\r\n        sreg |= ((sreg >> 2) & 1) ^ ((sreg >> 3) & 1) ? 0x10 : 0;\r\n        sreg |= val2 > val1 ? 1 : 0;\r\n        sreg |= 1 & ((~val1 & val2) | (val2 & R) | (R & ~val1)) ? 0x20 : 0;\r\n        cpu.data[95] = sreg;\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9402) {\r\n        /* SWAP, 1001 010d dddd 0010 */\r\n        const d = (opcode & 0x1f0) >> 4;\r\n        const i = cpu.data[d];\r\n        cpu.data[d] = ((15 & i) << 4) | ((240 & i) >>> 4);\r\n    }\r\n    else if (opcode === 0x95a8) {\r\n        /* WDR, 1001 0101 1010 1000 */\r\n        /* not implemented */\r\n    }\r\n    else if ((opcode & 0xfe0f) === 0x9204) {\r\n        /* XCH, 1001 001r rrrr 0100 */\r\n        const r = (opcode & 0x1f0) >> 4;\r\n        const val1 = cpu.data[r];\r\n        const val2 = cpu.data[cpu.dataView.getUint16(30, true)];\r\n        cpu.data[cpu.dataView.getUint16(30, true)] = val1;\r\n        cpu.data[r] = val2;\r\n    }\r\n    cpu.pc = (cpu.pc + 1) % cpu.progMem.length;\r\n    cpu.cycles++;\r\n}\r\n","export const portAConfig = {\r\n    PIN: 0x20,\r\n    DDR: 0x21,\r\n    PORT: 0x22,\r\n};\r\nexport const portBConfig = {\r\n    PIN: 0x23,\r\n    DDR: 0x24,\r\n    PORT: 0x25,\r\n};\r\nexport const portCConfig = {\r\n    PIN: 0x26,\r\n    DDR: 0x27,\r\n    PORT: 0x28,\r\n};\r\nexport const portDConfig = {\r\n    PIN: 0x29,\r\n    DDR: 0x2a,\r\n    PORT: 0x2b,\r\n};\r\nexport const portEConfig = {\r\n    PIN: 0x2c,\r\n    DDR: 0x2d,\r\n    PORT: 0x2e,\r\n};\r\nexport const portFConfig = {\r\n    PIN: 0x2f,\r\n    DDR: 0x30,\r\n    PORT: 0x31,\r\n};\r\nexport const portGConfig = {\r\n    PIN: 0x32,\r\n    DDR: 0x33,\r\n    PORT: 0x34,\r\n};\r\nexport const portHConfig = {\r\n    PIN: 0x100,\r\n    DDR: 0x101,\r\n    PORT: 0x102,\r\n};\r\nexport const portJConfig = {\r\n    PIN: 0x103,\r\n    DDR: 0x104,\r\n    PORT: 0x105,\r\n};\r\nexport const portKConfig = {\r\n    PIN: 0x106,\r\n    DDR: 0x107,\r\n    PORT: 0x108,\r\n};\r\nexport const portLConfig = {\r\n    PIN: 0x109,\r\n    DDR: 0x10a,\r\n    PORT: 0x10b,\r\n};\r\nexport var PinState;\r\n(function (PinState) {\r\n    PinState[PinState[\"Low\"] = 0] = \"Low\";\r\n    PinState[PinState[\"High\"] = 1] = \"High\";\r\n    PinState[PinState[\"Input\"] = 2] = \"Input\";\r\n    PinState[PinState[\"InputPullUp\"] = 3] = \"InputPullUp\";\r\n})(PinState || (PinState = {}));\r\n/* This mechanism allows timers to override specific GPIO pins */\r\nexport var PinOverrideMode;\r\n(function (PinOverrideMode) {\r\n    PinOverrideMode[PinOverrideMode[\"None\"] = 0] = \"None\";\r\n    PinOverrideMode[PinOverrideMode[\"Enable\"] = 1] = \"Enable\";\r\n    PinOverrideMode[PinOverrideMode[\"Set\"] = 2] = \"Set\";\r\n    PinOverrideMode[PinOverrideMode[\"Clear\"] = 3] = \"Clear\";\r\n    PinOverrideMode[PinOverrideMode[\"Toggle\"] = 4] = \"Toggle\";\r\n})(PinOverrideMode || (PinOverrideMode = {}));\r\nexport class AVRIOPort {\r\n    constructor(cpu, portConfig) {\r\n        this.cpu = cpu;\r\n        this.portConfig = portConfig;\r\n        this.listeners = [];\r\n        this.pinValue = 0;\r\n        this.overrideMask = 0xff;\r\n        this.lastValue = 0;\r\n        this.lastDdr = 0;\r\n        cpu.writeHooks[portConfig.DDR] = (value) => {\r\n            const portValue = cpu.data[portConfig.PORT];\r\n            cpu.data[portConfig.DDR] = value;\r\n            this.updatePinRegister(portValue, value);\r\n            this.writeGpio(portValue, value);\r\n            return true;\r\n        };\r\n        cpu.writeHooks[portConfig.PORT] = (value) => {\r\n            const ddrMask = cpu.data[portConfig.DDR];\r\n            cpu.data[portConfig.PORT] = value;\r\n            this.updatePinRegister(value, ddrMask);\r\n            this.writeGpio(value, ddrMask);\r\n            return true;\r\n        };\r\n        cpu.writeHooks[portConfig.PIN] = (value) => {\r\n            // Writing to 1 PIN toggles PORT bits\r\n            const oldPortValue = cpu.data[portConfig.PORT];\r\n            const ddrMask = cpu.data[portConfig.DDR];\r\n            const portValue = oldPortValue ^ value;\r\n            cpu.data[portConfig.PORT] = portValue;\r\n            cpu.data[portConfig.PIN] = (cpu.data[portConfig.PIN] & ~ddrMask) | (portValue & ddrMask);\r\n            this.writeGpio(portValue, ddrMask);\r\n            return true;\r\n        };\r\n        // The following hook is used by the timer compare output to override GPIO pins:\r\n        cpu.gpioTimerHooks[portConfig.PORT] = (pin, mode) => {\r\n            const pinMask = 1 << pin;\r\n            if (mode == PinOverrideMode.None) {\r\n                this.overrideMask |= pinMask;\r\n            }\r\n            else {\r\n                this.overrideMask &= ~pinMask;\r\n                switch (mode) {\r\n                    case PinOverrideMode.Enable:\r\n                        this.overrideValue &= ~pinMask;\r\n                        this.overrideValue |= cpu.data[portConfig.PORT] & pinMask;\r\n                        break;\r\n                    case PinOverrideMode.Set:\r\n                        this.overrideValue |= pinMask;\r\n                        break;\r\n                    case PinOverrideMode.Clear:\r\n                        this.overrideValue &= ~pinMask;\r\n                        break;\r\n                    case PinOverrideMode.Toggle:\r\n                        this.overrideValue ^= pinMask;\r\n                        break;\r\n                }\r\n            }\r\n            this.writeGpio(cpu.data[portConfig.PORT], cpu.data[portConfig.DDR]);\r\n        };\r\n    }\r\n    addListener(listener) {\r\n        this.listeners.push(listener);\r\n    }\r\n    removeListener(listener) {\r\n        this.listeners = this.listeners.filter((l) => l !== listener);\r\n    }\r\n    /**\r\n     * Get the state of a given GPIO pin\r\n     *\r\n     * @param index Pin index to return from 0 to 7\r\n     * @returns PinState.Low or PinState.High if the pin is set to output, PinState.Input if the pin is set\r\n     *   to input, and PinState.InputPullUp if the pin is set to input and the internal pull-up resistor has\r\n     *   been enabled.\r\n     */\r\n    pinState(index) {\r\n        const ddr = this.cpu.data[this.portConfig.DDR];\r\n        const port = this.cpu.data[this.portConfig.PORT];\r\n        const bitMask = 1 << index;\r\n        if (ddr & bitMask) {\r\n            return this.lastValue & bitMask ? PinState.High : PinState.Low;\r\n        }\r\n        else {\r\n            return port & bitMask ? PinState.InputPullUp : PinState.Input;\r\n        }\r\n    }\r\n    /**\r\n     * Sets the input value for the given pin. This is the value that\r\n     * will be returned when reading from the PIN register.\r\n     */\r\n    setPin(index, value) {\r\n        const bitMask = 1 << index;\r\n        this.pinValue &= ~bitMask;\r\n        if (value) {\r\n            this.pinValue |= bitMask;\r\n        }\r\n        this.updatePinRegister(this.cpu.data[this.portConfig.PORT], this.cpu.data[this.portConfig.DDR]);\r\n    }\r\n    updatePinRegister(port, ddr) {\r\n        this.cpu.data[this.portConfig.PIN] = (this.pinValue & ~ddr) | (port & ddr);\r\n    }\r\n    writeGpio(value, ddr) {\r\n        const newValue = (((value & this.overrideMask) | this.overrideValue) & ddr) | (value & ~ddr);\r\n        const prevValue = this.lastValue;\r\n        if (newValue !== prevValue || ddr !== this.lastDdr) {\r\n            this.lastValue = newValue;\r\n            this.lastDdr = ddr;\r\n            for (const listener of this.listeners) {\r\n                listener(newValue, prevValue);\r\n            }\r\n        }\r\n    }\r\n}\r\n","/**\r\n * AVR-8 Timers\r\n * Part of AVR8js\r\n * Reference: http://ww1.microchip.com/downloads/en/DeviceDoc/ATmega48A-PA-88A-PA-168A-PA-328-P-DS-DS40002061A.pdf\r\n *\r\n * Copyright (C) 2019, 2020, Uri Shaked\r\n */\r\nimport { PinOverrideMode, portBConfig, portDConfig } from './gpio';\r\nconst timer01Dividers = {\r\n    0: 0,\r\n    1: 1,\r\n    2: 8,\r\n    3: 64,\r\n    4: 256,\r\n    5: 1024,\r\n    6: 0,\r\n    7: 0,\r\n};\r\n/** These are differnet for some devices (e.g. ATtiny85) */\r\nconst defaultTimerBits = {\r\n    // TIFR bits\r\n    TOV: 1,\r\n    OCFA: 2,\r\n    OCFB: 4,\r\n    // TIMSK bits\r\n    TOIE: 1,\r\n    OCIEA: 2,\r\n    OCIEB: 4,\r\n};\r\nexport const timer0Config = Object.assign({ bits: 8, captureInterrupt: 0, compAInterrupt: 0x1c, compBInterrupt: 0x1e, ovfInterrupt: 0x20, TIFR: 0x35, OCRA: 0x47, OCRB: 0x48, ICR: 0, TCNT: 0x46, TCCRA: 0x44, TCCRB: 0x45, TCCRC: 0, TIMSK: 0x6e, dividers: timer01Dividers, compPortA: portDConfig.PORT, compPinA: 6, compPortB: portDConfig.PORT, compPinB: 5 }, defaultTimerBits);\r\nexport const timer1Config = Object.assign({ bits: 16, captureInterrupt: 0x14, compAInterrupt: 0x16, compBInterrupt: 0x18, ovfInterrupt: 0x1a, TIFR: 0x36, OCRA: 0x88, OCRB: 0x8a, ICR: 0x86, TCNT: 0x84, TCCRA: 0x80, TCCRB: 0x81, TCCRC: 0x82, TIMSK: 0x6f, dividers: timer01Dividers, compPortA: portBConfig.PORT, compPinA: 1, compPortB: portBConfig.PORT, compPinB: 2 }, defaultTimerBits);\r\nexport const timer2Config = Object.assign({ bits: 8, captureInterrupt: 0, compAInterrupt: 0x0e, compBInterrupt: 0x10, ovfInterrupt: 0x12, TIFR: 0x37, OCRA: 0xb3, OCRB: 0xb4, ICR: 0, TCNT: 0xb2, TCCRA: 0xb0, TCCRB: 0xb1, TCCRC: 0, TIMSK: 0x70, dividers: {\r\n        0: 0,\r\n        1: 1,\r\n        2: 8,\r\n        3: 32,\r\n        4: 64,\r\n        5: 128,\r\n        6: 256,\r\n        7: 1024,\r\n    }, compPortA: portBConfig.PORT, compPinA: 3, compPortB: portDConfig.PORT, compPinB: 3 }, defaultTimerBits);\r\n/* All the following types and constants are related to WGM (Waveform Generation Mode) bits: */\r\nvar TimerMode;\r\n(function (TimerMode) {\r\n    TimerMode[TimerMode[\"Normal\"] = 0] = \"Normal\";\r\n    TimerMode[TimerMode[\"PWMPhaseCorrect\"] = 1] = \"PWMPhaseCorrect\";\r\n    TimerMode[TimerMode[\"CTC\"] = 2] = \"CTC\";\r\n    TimerMode[TimerMode[\"FastPWM\"] = 3] = \"FastPWM\";\r\n    TimerMode[TimerMode[\"PWMPhaseFrequencyCorrect\"] = 4] = \"PWMPhaseFrequencyCorrect\";\r\n    TimerMode[TimerMode[\"Reserved\"] = 5] = \"Reserved\";\r\n})(TimerMode || (TimerMode = {}));\r\nvar TOVUpdateMode;\r\n(function (TOVUpdateMode) {\r\n    TOVUpdateMode[TOVUpdateMode[\"Max\"] = 0] = \"Max\";\r\n    TOVUpdateMode[TOVUpdateMode[\"Top\"] = 1] = \"Top\";\r\n    TOVUpdateMode[TOVUpdateMode[\"Bottom\"] = 2] = \"Bottom\";\r\n})(TOVUpdateMode || (TOVUpdateMode = {}));\r\nvar OCRUpdateMode;\r\n(function (OCRUpdateMode) {\r\n    OCRUpdateMode[OCRUpdateMode[\"Immediate\"] = 0] = \"Immediate\";\r\n    OCRUpdateMode[OCRUpdateMode[\"Top\"] = 1] = \"Top\";\r\n    OCRUpdateMode[OCRUpdateMode[\"Bottom\"] = 2] = \"Bottom\";\r\n})(OCRUpdateMode || (OCRUpdateMode = {}));\r\nconst TopOCRA = 1;\r\nconst TopICR = 2;\r\n// Enable Toggle mode for OCxA in PWM Wave Generation mode\r\nconst OCToggle = 1;\r\nconst { Normal, PWMPhaseCorrect, CTC, FastPWM, Reserved, PWMPhaseFrequencyCorrect } = TimerMode;\r\nconst wgmModes8Bit = [\r\n    /*0*/ [Normal, 0xff, OCRUpdateMode.Immediate, TOVUpdateMode.Max, 0],\r\n    /*1*/ [PWMPhaseCorrect, 0xff, OCRUpdateMode.Top, TOVUpdateMode.Bottom, 0],\r\n    /*2*/ [CTC, TopOCRA, OCRUpdateMode.Immediate, TOVUpdateMode.Max, 0],\r\n    /*3*/ [FastPWM, 0xff, OCRUpdateMode.Bottom, TOVUpdateMode.Max, 0],\r\n    /*4*/ [Reserved, 0xff, OCRUpdateMode.Immediate, TOVUpdateMode.Max, 0],\r\n    /*5*/ [PWMPhaseCorrect, TopOCRA, OCRUpdateMode.Top, TOVUpdateMode.Bottom, OCToggle],\r\n    /*6*/ [Reserved, 0xff, OCRUpdateMode.Immediate, TOVUpdateMode.Max, 0],\r\n    /*7*/ [FastPWM, TopOCRA, OCRUpdateMode.Bottom, TOVUpdateMode.Top, OCToggle],\r\n];\r\n// Table 16-4 in the datasheet\r\nconst wgmModes16Bit = [\r\n    /*0 */ [Normal, 0xffff, OCRUpdateMode.Immediate, TOVUpdateMode.Max, 0],\r\n    /*1 */ [PWMPhaseCorrect, 0x00ff, OCRUpdateMode.Top, TOVUpdateMode.Bottom, 0],\r\n    /*2 */ [PWMPhaseCorrect, 0x01ff, OCRUpdateMode.Top, TOVUpdateMode.Bottom, 0],\r\n    /*3 */ [PWMPhaseCorrect, 0x03ff, OCRUpdateMode.Top, TOVUpdateMode.Bottom, 0],\r\n    /*4 */ [CTC, TopOCRA, OCRUpdateMode.Immediate, TOVUpdateMode.Max, 0],\r\n    /*5 */ [FastPWM, 0x00ff, OCRUpdateMode.Bottom, TOVUpdateMode.Top, 0],\r\n    /*6 */ [FastPWM, 0x01ff, OCRUpdateMode.Bottom, TOVUpdateMode.Top, 0],\r\n    /*7 */ [FastPWM, 0x03ff, OCRUpdateMode.Bottom, TOVUpdateMode.Top, 0],\r\n    /*8 */ [PWMPhaseFrequencyCorrect, TopICR, OCRUpdateMode.Bottom, TOVUpdateMode.Bottom, 0],\r\n    /*9 */ [PWMPhaseFrequencyCorrect, TopOCRA, OCRUpdateMode.Bottom, TOVUpdateMode.Bottom, OCToggle],\r\n    /*10*/ [PWMPhaseCorrect, TopICR, OCRUpdateMode.Top, TOVUpdateMode.Bottom, 0],\r\n    /*11*/ [PWMPhaseCorrect, TopOCRA, OCRUpdateMode.Top, TOVUpdateMode.Bottom, OCToggle],\r\n    /*12*/ [CTC, TopICR, OCRUpdateMode.Immediate, TOVUpdateMode.Max, 0],\r\n    /*13*/ [Reserved, 0xffff, OCRUpdateMode.Immediate, TOVUpdateMode.Max, 0],\r\n    /*14*/ [FastPWM, TopICR, OCRUpdateMode.Bottom, TOVUpdateMode.Top, OCToggle],\r\n    /*15*/ [FastPWM, TopOCRA, OCRUpdateMode.Bottom, TOVUpdateMode.Top, OCToggle],\r\n];\r\nfunction compToOverride(comp) {\r\n    switch (comp) {\r\n        case 1:\r\n            return PinOverrideMode.Toggle;\r\n        case 2:\r\n            return PinOverrideMode.Clear;\r\n        case 3:\r\n            return PinOverrideMode.Set;\r\n        default:\r\n            return PinOverrideMode.Enable;\r\n    }\r\n}\r\nexport class AVRTimer {\r\n    constructor(cpu, config) {\r\n        this.cpu = cpu;\r\n        this.config = config;\r\n        this.MAX = this.config.bits === 16 ? 0xffff : 0xff;\r\n        this.lastCycle = 0;\r\n        this.ocrA = 0;\r\n        this.nextOcrA = 0;\r\n        this.ocrB = 0;\r\n        this.nextOcrB = 0;\r\n        this.ocrUpdateMode = OCRUpdateMode.Immediate;\r\n        this.tovUpdateMode = TOVUpdateMode.Max;\r\n        this.icr = 0; // only for 16-bit timers\r\n        this.tcnt = 0;\r\n        this.tcntNext = 0;\r\n        this.tcntUpdated = false;\r\n        this.updateDivider = false;\r\n        this.countingUp = true;\r\n        this.divider = 0;\r\n        // This is the temporary register used to access 16-bit registers (section 16.3 of the datasheet)\r\n        this.highByteTemp = 0;\r\n        // Interrupts\r\n        this.OVF = {\r\n            address: this.config.ovfInterrupt,\r\n            flagRegister: this.config.TIFR,\r\n            flagMask: this.config.TOV,\r\n            enableRegister: this.config.TIMSK,\r\n            enableMask: this.config.TOIE,\r\n        };\r\n        this.OCFA = {\r\n            address: this.config.compAInterrupt,\r\n            flagRegister: this.config.TIFR,\r\n            flagMask: this.config.OCFA,\r\n            enableRegister: this.config.TIMSK,\r\n            enableMask: this.config.OCIEA,\r\n        };\r\n        this.OCFB = {\r\n            address: this.config.compBInterrupt,\r\n            flagRegister: this.config.TIFR,\r\n            flagMask: this.config.OCFB,\r\n            enableRegister: this.config.TIMSK,\r\n            enableMask: this.config.OCIEB,\r\n        };\r\n        this.count = (reschedule = true) => {\r\n            const { divider, lastCycle, cpu } = this;\r\n            const { cycles } = cpu;\r\n            const delta = cycles - lastCycle;\r\n            if (divider && delta >= divider) {\r\n                const counterDelta = Math.floor(delta / divider);\r\n                this.lastCycle += counterDelta * divider;\r\n                const val = this.tcnt;\r\n                const { timerMode, TOP } = this;\r\n                const phasePwm = timerMode === PWMPhaseCorrect || timerMode === PWMPhaseFrequencyCorrect;\r\n                const newVal = phasePwm\r\n                    ? this.phasePwmCount(val, counterDelta)\r\n                    : (val + counterDelta) % (TOP + 1);\r\n                const overflow = val + counterDelta > TOP;\r\n                // A CPU write overrides (has priority over) all counter clear or count operations.\r\n                if (!this.tcntUpdated) {\r\n                    this.tcnt = newVal;\r\n                    if (!phasePwm) {\r\n                        this.timerUpdated(newVal, val);\r\n                    }\r\n                }\r\n                if (!phasePwm) {\r\n                    if (timerMode === FastPWM && overflow) {\r\n                        const { compA, compB } = this;\r\n                        if (compA) {\r\n                            this.updateCompPin(compA, 'A', true);\r\n                        }\r\n                        if (compB) {\r\n                            this.updateCompPin(compB, 'B', true);\r\n                        }\r\n                    }\r\n                    if (this.ocrUpdateMode == OCRUpdateMode.Bottom && overflow) {\r\n                        // OCRUpdateMode.Top only occurs in Phase Correct modes, handled by phasePwmCount()\r\n                        this.ocrA = this.nextOcrA;\r\n                        this.ocrB = this.nextOcrB;\r\n                    }\r\n                    // OCRUpdateMode.Bottom only occurs in Phase Correct modes, handled by phasePwmCount().\r\n                    // Thus we only handle TOVUpdateMode.Top or TOVUpdateMode.Max here.\r\n                    if (overflow && (this.tovUpdateMode == TOVUpdateMode.Top || TOP === this.MAX)) {\r\n                        cpu.setInterruptFlag(this.OVF);\r\n                    }\r\n                }\r\n            }\r\n            if (this.tcntUpdated) {\r\n                this.tcnt = this.tcntNext;\r\n                this.tcntUpdated = false;\r\n            }\r\n            if (this.updateDivider) {\r\n                const newDivider = this.config.dividers[this.CS];\r\n                this.lastCycle = newDivider ? this.cpu.cycles : 0;\r\n                this.updateDivider = false;\r\n                this.divider = newDivider;\r\n                if (newDivider) {\r\n                    cpu.addClockEvent(this.count, this.lastCycle + newDivider - cpu.cycles);\r\n                }\r\n                return;\r\n            }\r\n            if (reschedule && divider) {\r\n                cpu.addClockEvent(this.count, this.lastCycle + divider - cpu.cycles);\r\n            }\r\n        };\r\n        this.updateWGMConfig();\r\n        this.cpu.readHooks[config.TCNT] = (addr) => {\r\n            this.count(false);\r\n            if (this.config.bits === 16) {\r\n                this.cpu.data[addr + 1] = this.tcnt >> 8;\r\n            }\r\n            return (this.cpu.data[addr] = this.tcnt & 0xff);\r\n        };\r\n        this.cpu.writeHooks[config.TCNT] = (value) => {\r\n            this.tcntNext = (this.highByteTemp << 8) | value;\r\n            this.countingUp = true;\r\n            this.tcntUpdated = true;\r\n            this.cpu.updateClockEvent(this.count, 0);\r\n            if (this.divider) {\r\n                this.timerUpdated(this.tcntNext, this.tcntNext);\r\n            }\r\n        };\r\n        this.cpu.writeHooks[config.OCRA] = (value) => {\r\n            this.nextOcrA = (this.highByteTemp << 8) | value;\r\n            if (this.ocrUpdateMode === OCRUpdateMode.Immediate) {\r\n                this.ocrA = this.nextOcrA;\r\n            }\r\n        };\r\n        this.cpu.writeHooks[config.OCRB] = (value) => {\r\n            this.nextOcrB = (this.highByteTemp << 8) | value;\r\n            if (this.ocrUpdateMode === OCRUpdateMode.Immediate) {\r\n                this.ocrB = this.nextOcrB;\r\n            }\r\n        };\r\n        this.cpu.writeHooks[config.ICR] = (value) => {\r\n            this.icr = (this.highByteTemp << 8) | value;\r\n        };\r\n        if (this.config.bits === 16) {\r\n            const updateTempRegister = (value) => {\r\n                this.highByteTemp = value;\r\n            };\r\n            this.cpu.writeHooks[config.TCNT + 1] = updateTempRegister;\r\n            this.cpu.writeHooks[config.OCRA + 1] = updateTempRegister;\r\n            this.cpu.writeHooks[config.OCRB + 1] = updateTempRegister;\r\n            this.cpu.writeHooks[config.ICR + 1] = updateTempRegister;\r\n        }\r\n        cpu.writeHooks[config.TCCRA] = (value) => {\r\n            this.cpu.data[config.TCCRA] = value;\r\n            this.updateWGMConfig();\r\n            return true;\r\n        };\r\n        cpu.writeHooks[config.TCCRB] = (value) => {\r\n            this.cpu.data[config.TCCRB] = value;\r\n            this.updateDivider = true;\r\n            this.cpu.clearClockEvent(this.count);\r\n            this.cpu.addClockEvent(this.count, 0);\r\n            this.updateWGMConfig();\r\n            return true;\r\n        };\r\n        cpu.writeHooks[config.TIFR] = (value) => {\r\n            this.cpu.data[config.TIFR] = value;\r\n            this.cpu.clearInterruptByFlag(this.OVF, value);\r\n            this.cpu.clearInterruptByFlag(this.OCFA, value);\r\n            this.cpu.clearInterruptByFlag(this.OCFB, value);\r\n            return true;\r\n        };\r\n        cpu.writeHooks[config.TIMSK] = (value) => {\r\n            this.cpu.updateInterruptEnable(this.OVF, value);\r\n            this.cpu.updateInterruptEnable(this.OCFA, value);\r\n            this.cpu.updateInterruptEnable(this.OCFB, value);\r\n        };\r\n    }\r\n    reset() {\r\n        this.divider = 0;\r\n        this.lastCycle = 0;\r\n        this.ocrA = 0;\r\n        this.nextOcrA = 0;\r\n        this.ocrB = 0;\r\n        this.nextOcrB = 0;\r\n        this.icr = 0;\r\n        this.tcnt = 0;\r\n        this.tcntNext = 0;\r\n        this.tcntUpdated = false;\r\n        this.countingUp = false;\r\n        this.updateDivider = true;\r\n    }\r\n    get TCCRA() {\r\n        return this.cpu.data[this.config.TCCRA];\r\n    }\r\n    get TCCRB() {\r\n        return this.cpu.data[this.config.TCCRB];\r\n    }\r\n    get TIMSK() {\r\n        return this.cpu.data[this.config.TIMSK];\r\n    }\r\n    get CS() {\r\n        return (this.TCCRB & 0x7);\r\n    }\r\n    get WGM() {\r\n        const mask = this.config.bits === 16 ? 0x18 : 0x8;\r\n        return ((this.TCCRB & mask) >> 1) | (this.TCCRA & 0x3);\r\n    }\r\n    get TOP() {\r\n        switch (this.topValue) {\r\n            case TopOCRA:\r\n                return this.ocrA;\r\n            case TopICR:\r\n                return this.icr;\r\n            default:\r\n                return this.topValue;\r\n        }\r\n    }\r\n    updateWGMConfig() {\r\n        const { config, WGM } = this;\r\n        const wgmModes = config.bits === 16 ? wgmModes16Bit : wgmModes8Bit;\r\n        const TCCRA = this.cpu.data[config.TCCRA];\r\n        const [timerMode, topValue, ocrUpdateMode, tovUpdateMode, flags] = wgmModes[WGM];\r\n        this.timerMode = timerMode;\r\n        this.topValue = topValue;\r\n        this.ocrUpdateMode = ocrUpdateMode;\r\n        this.tovUpdateMode = tovUpdateMode;\r\n        const pwmMode = timerMode === FastPWM ||\r\n            timerMode === PWMPhaseCorrect ||\r\n            timerMode === PWMPhaseFrequencyCorrect;\r\n        const prevCompA = this.compA;\r\n        this.compA = ((TCCRA >> 6) & 0x3);\r\n        if (this.compA === 1 && pwmMode && !(flags & OCToggle)) {\r\n            this.compA = 0;\r\n        }\r\n        if (!!prevCompA !== !!this.compA) {\r\n            this.updateCompA(this.compA ? PinOverrideMode.Enable : PinOverrideMode.None);\r\n        }\r\n        const prevCompB = this.compB;\r\n        this.compB = ((TCCRA >> 4) & 0x3);\r\n        if (this.compB === 1 && pwmMode) {\r\n            this.compB = 0; // Reserved, according to the datasheet\r\n        }\r\n        if (!!prevCompB !== !!this.compB) {\r\n            this.updateCompB(this.compB ? PinOverrideMode.Enable : PinOverrideMode.None);\r\n        }\r\n    }\r\n    phasePwmCount(value, delta) {\r\n        const { ocrA, ocrB, TOP, tcntUpdated } = this;\r\n        while (delta > 0) {\r\n            if (this.countingUp) {\r\n                value++;\r\n                if (value === TOP && !tcntUpdated) {\r\n                    this.countingUp = false;\r\n                    if (this.ocrUpdateMode === OCRUpdateMode.Top) {\r\n                        this.ocrA = this.nextOcrA;\r\n                        this.ocrB = this.nextOcrB;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                value--;\r\n                if (!value && !tcntUpdated) {\r\n                    this.countingUp = true;\r\n                    this.cpu.setInterruptFlag(this.OVF);\r\n                    if (this.ocrUpdateMode === OCRUpdateMode.Bottom) {\r\n                        this.ocrA = this.nextOcrA;\r\n                        this.ocrB = this.nextOcrB;\r\n                    }\r\n                }\r\n            }\r\n            if (!tcntUpdated && value === ocrA) {\r\n                this.cpu.setInterruptFlag(this.OCFA);\r\n                if (this.compA) {\r\n                    this.updateCompPin(this.compA, 'A');\r\n                }\r\n            }\r\n            if (!tcntUpdated && value === ocrB) {\r\n                this.cpu.setInterruptFlag(this.OCFB);\r\n                if (this.compB) {\r\n                    this.updateCompPin(this.compB, 'B');\r\n                }\r\n            }\r\n            delta--;\r\n        }\r\n        return value;\r\n    }\r\n    timerUpdated(value, prevValue) {\r\n        const { ocrA, ocrB } = this;\r\n        const overflow = prevValue > value;\r\n        if ((prevValue < ocrA || overflow) && value >= ocrA) {\r\n            this.cpu.setInterruptFlag(this.OCFA);\r\n            if (this.compA) {\r\n                this.updateCompPin(this.compA, 'A');\r\n            }\r\n        }\r\n        if ((prevValue < ocrB || overflow) && value >= ocrB) {\r\n            this.cpu.setInterruptFlag(this.OCFB);\r\n            if (this.compB) {\r\n                this.updateCompPin(this.compB, 'B');\r\n            }\r\n        }\r\n    }\r\n    updateCompPin(compValue, pinName, bottom = false) {\r\n        let newValue = PinOverrideMode.None;\r\n        const invertingMode = compValue === 3;\r\n        const isSet = this.countingUp === invertingMode;\r\n        switch (this.timerMode) {\r\n            case Normal:\r\n            case CTC:\r\n                newValue = compToOverride(compValue);\r\n                break;\r\n            case FastPWM:\r\n                if (compValue === 1) {\r\n                    newValue = bottom ? PinOverrideMode.None : PinOverrideMode.Toggle;\r\n                }\r\n                else {\r\n                    newValue = invertingMode !== bottom ? PinOverrideMode.Set : PinOverrideMode.Clear;\r\n                }\r\n                break;\r\n            case PWMPhaseCorrect:\r\n            case PWMPhaseFrequencyCorrect:\r\n                if (compValue === 1) {\r\n                    newValue = PinOverrideMode.Toggle;\r\n                }\r\n                else {\r\n                    newValue = isSet ? PinOverrideMode.Set : PinOverrideMode.Clear;\r\n                }\r\n                break;\r\n        }\r\n        if (newValue !== PinOverrideMode.None) {\r\n            if (pinName === 'A') {\r\n                this.updateCompA(newValue);\r\n            }\r\n            else {\r\n                this.updateCompB(newValue);\r\n            }\r\n        }\r\n    }\r\n    updateCompA(value) {\r\n        const { compPortA, compPinA } = this.config;\r\n        const hook = this.cpu.gpioTimerHooks[compPortA];\r\n        if (hook) {\r\n            hook(compPinA, value, compPortA);\r\n        }\r\n    }\r\n    updateCompB(value) {\r\n        const { compPortB, compPinB } = this.config;\r\n        const hook = this.cpu.gpioTimerHooks[compPortB];\r\n        if (hook) {\r\n            hook(compPinB, value, compPortB);\r\n        }\r\n    }\r\n}\r\n","/**\r\n * AVR-8 USART Peripheral\r\n * Part of AVR8js\r\n * Reference: http://ww1.microchip.com/downloads/en/DeviceDoc/ATmega48A-PA-88A-PA-168A-PA-328-P-DS-DS40002061A.pdf\r\n *\r\n * Copyright (C) 2019, 2020, Uri Shaked\r\n */\r\nexport const usart0Config = {\r\n    rxCompleteInterrupt: 0x24,\r\n    dataRegisterEmptyInterrupt: 0x26,\r\n    txCompleteInterrupt: 0x28,\r\n    UCSRA: 0xc0,\r\n    UCSRB: 0xc1,\r\n    UCSRC: 0xc2,\r\n    UBRRL: 0xc4,\r\n    UBRRH: 0xc5,\r\n    UDR: 0xc6,\r\n};\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n// Register bits:\r\nconst UCSRA_RXC = 0x80; // USART Receive Complete\r\nconst UCSRA_TXC = 0x40; // USART Transmit Complete\r\nconst UCSRA_UDRE = 0x20; // USART Data Register Empty\r\nconst UCSRA_FE = 0x10; // Frame Error\r\nconst UCSRA_DOR = 0x8; // Data OverRun\r\nconst UCSRA_UPE = 0x4; // USART Parity Error\r\nconst UCSRA_U2X = 0x2; // Double the USART Transmission Speed\r\nconst UCSRA_MPCM = 0x1; // Multi-processor Communication Mode\r\nconst UCSRB_RXCIE = 0x80; // RX Complete Interrupt Enable\r\nconst UCSRB_TXCIE = 0x40; // TX Complete Interrupt Enable\r\nconst UCSRB_UDRIE = 0x20; // USART Data Register Empty Interrupt Enable\r\nconst UCSRB_RXEN = 0x10; // Receiver Enable\r\nconst UCSRB_TXEN = 0x8; // Transmitter Enable\r\nconst UCSRB_UCSZ2 = 0x4; // Character Size 2\r\nconst UCSRB_RXB8 = 0x2; // Receive Data Bit 8\r\nconst UCSRB_TXB8 = 0x1; // Transmit Data Bit 8\r\nconst UCSRC_UMSEL1 = 0x80; // USART Mode Select 1\r\nconst UCSRC_UMSEL0 = 0x40; // USART Mode Select 0\r\nconst UCSRC_UPM1 = 0x20; // Parity Mode 1\r\nconst UCSRC_UPM0 = 0x10; // Parity Mode 0\r\nconst UCSRC_USBS = 0x8; // Stop Bit Select\r\nconst UCSRC_UCSZ1 = 0x4; // Character Size 1\r\nconst UCSRC_UCSZ0 = 0x2; // Character Size 0\r\nconst UCSRC_UCPOL = 0x1; // Clock Polarity\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\nconst rxMasks = {\r\n    5: 0x1f,\r\n    6: 0x3f,\r\n    7: 0x7f,\r\n    8: 0xff,\r\n    9: 0xff,\r\n};\r\nexport class AVRUSART {\r\n    constructor(cpu, config, freqHz) {\r\n        this.cpu = cpu;\r\n        this.config = config;\r\n        this.freqHz = freqHz;\r\n        this.onByteTransmit = null;\r\n        this.onLineTransmit = null;\r\n        this.onRxComplete = null;\r\n        this.rxBusyValue = false;\r\n        this.rxByte = 0;\r\n        this.lineBuffer = '';\r\n        // Interrupts\r\n        this.RXC = {\r\n            address: this.config.rxCompleteInterrupt,\r\n            flagRegister: this.config.UCSRA,\r\n            flagMask: UCSRA_RXC,\r\n            enableRegister: this.config.UCSRB,\r\n            enableMask: UCSRB_RXCIE,\r\n            constant: true,\r\n        };\r\n        this.UDRE = {\r\n            address: this.config.dataRegisterEmptyInterrupt,\r\n            flagRegister: this.config.UCSRA,\r\n            flagMask: UCSRA_UDRE,\r\n            enableRegister: this.config.UCSRB,\r\n            enableMask: UCSRB_UDRIE,\r\n        };\r\n        this.TXC = {\r\n            address: this.config.txCompleteInterrupt,\r\n            flagRegister: this.config.UCSRA,\r\n            flagMask: UCSRA_TXC,\r\n            enableRegister: this.config.UCSRB,\r\n            enableMask: UCSRB_TXCIE,\r\n        };\r\n        this.reset();\r\n        this.cpu.writeHooks[config.UCSRA] = (value) => {\r\n            cpu.data[config.UCSRA] = value & (UCSRA_MPCM | UCSRA_U2X);\r\n            cpu.clearInterruptByFlag(this.TXC, value);\r\n            return true;\r\n        };\r\n        this.cpu.writeHooks[config.UCSRB] = (value, oldValue) => {\r\n            cpu.updateInterruptEnable(this.RXC, value);\r\n            cpu.updateInterruptEnable(this.UDRE, value);\r\n            cpu.updateInterruptEnable(this.TXC, value);\r\n            if (value & UCSRB_RXEN && oldValue & UCSRB_RXEN) {\r\n                cpu.clearInterrupt(this.RXC);\r\n            }\r\n            if (value & UCSRB_TXEN && !(oldValue & UCSRB_TXEN)) {\r\n                // Enabling the transmission - mark UDR as empty\r\n                cpu.setInterruptFlag(this.UDRE);\r\n            }\r\n        };\r\n        this.cpu.readHooks[config.UDR] = () => {\r\n            var _a;\r\n            const mask = (_a = rxMasks[this.bitsPerChar]) !== null && _a !== void 0 ? _a : 0xff;\r\n            const result = this.rxByte & mask;\r\n            this.rxByte = 0;\r\n            this.cpu.clearInterrupt(this.RXC);\r\n            return result;\r\n        };\r\n        this.cpu.writeHooks[config.UDR] = (value) => {\r\n            if (this.onByteTransmit) {\r\n                this.onByteTransmit(value);\r\n            }\r\n            if (this.onLineTransmit) {\r\n                const ch = String.fromCharCode(value);\r\n                if (ch === '\\n') {\r\n                    this.onLineTransmit(this.lineBuffer);\r\n                    this.lineBuffer = '';\r\n                }\r\n                else {\r\n                    this.lineBuffer += ch;\r\n                }\r\n            }\r\n            this.cpu.addClockEvent(() => {\r\n                cpu.setInterruptFlag(this.UDRE);\r\n                cpu.setInterruptFlag(this.TXC);\r\n            }, this.cyclesPerChar);\r\n            this.cpu.clearInterrupt(this.TXC);\r\n            this.cpu.clearInterrupt(this.UDRE);\r\n        };\r\n    }\r\n    reset() {\r\n        this.cpu.data[this.config.UCSRA] = UCSRA_UDRE;\r\n        this.cpu.data[this.config.UCSRB] = 0;\r\n        this.cpu.data[this.config.UCSRC] = UCSRC_UCSZ1 | UCSRC_UCSZ0; // default: 8 bits per byte\r\n        this.rxBusyValue = false;\r\n        this.rxByte = 0;\r\n        this.lineBuffer = '';\r\n    }\r\n    get rxBusy() {\r\n        return this.rxBusyValue;\r\n    }\r\n    writeByte(value) {\r\n        const { cpu, config } = this;\r\n        if (this.rxBusyValue || !(cpu.data[config.UCSRB] & UCSRB_RXEN)) {\r\n            return false;\r\n        }\r\n        this.rxBusyValue = true;\r\n        cpu.addClockEvent(() => {\r\n            var _a;\r\n            this.rxByte = value;\r\n            this.rxBusyValue = false;\r\n            cpu.setInterruptFlag(this.RXC);\r\n            (_a = this.onRxComplete) === null || _a === void 0 ? void 0 : _a.call(this);\r\n        }, this.cyclesPerChar);\r\n        return true;\r\n    }\r\n    get cyclesPerChar() {\r\n        const symbolsPerChar = 1 + this.bitsPerChar + this.stopBits + (this.parityEnabled ? 1 : 0);\r\n        return (this.UBRR * this.multiplier + 1) * symbolsPerChar;\r\n    }\r\n    get UBRR() {\r\n        return (this.cpu.data[this.config.UBRRH] << 8) | this.cpu.data[this.config.UBRRL];\r\n    }\r\n    get multiplier() {\r\n        return this.cpu.data[this.config.UCSRA] & UCSRA_U2X ? 8 : 16;\r\n    }\r\n    get baudRate() {\r\n        return Math.floor(this.freqHz / (this.multiplier * (1 + this.UBRR)));\r\n    }\r\n    get bitsPerChar() {\r\n        const ucsz = ((this.cpu.data[this.config.UCSRC] & (UCSRC_UCSZ1 | UCSRC_UCSZ0)) >> 1) |\r\n            (this.cpu.data[this.config.UCSRB] & UCSRB_UCSZ2);\r\n        switch (ucsz) {\r\n            case 0:\r\n                return 5;\r\n            case 1:\r\n                return 6;\r\n            case 2:\r\n                return 7;\r\n            case 3:\r\n                return 8;\r\n            default: // 4..6 are reserved\r\n            case 7:\r\n                return 9;\r\n        }\r\n    }\r\n    get stopBits() {\r\n        return this.cpu.data[this.config.UCSRC] & UCSRC_USBS ? 2 : 1;\r\n    }\r\n    get parityEnabled() {\r\n        return this.cpu.data[this.config.UCSRC] & UCSRC_UPM1 ? true : false;\r\n    }\r\n    get parityOdd() {\r\n        return this.cpu.data[this.config.UCSRC] & UCSRC_UPM0 ? true : false;\r\n    }\r\n}\r\n","export class EEPROMMemoryBackend {\r\n    constructor(size) {\r\n        this.memory = new Uint8Array(size);\r\n        this.memory.fill(0xff);\r\n    }\r\n    readMemory(addr) {\r\n        return this.memory[addr];\r\n    }\r\n    writeMemory(addr, value) {\r\n        this.memory[addr] &= value;\r\n    }\r\n    eraseMemory(addr) {\r\n        this.memory[addr] = 0xff;\r\n    }\r\n}\r\nexport const eepromConfig = {\r\n    eepromReadyInterrupt: 0x2c,\r\n    EECR: 0x3f,\r\n    EEDR: 0x40,\r\n    EEARL: 0x41,\r\n    EEARH: 0x42,\r\n    eraseCycles: 28800,\r\n    writeCycles: 28800,\r\n};\r\nconst EERE = 1 << 0;\r\nconst EEPE = 1 << 1;\r\nconst EEMPE = 1 << 2;\r\nconst EERIE = 1 << 3;\r\nconst EEPM0 = 1 << 4;\r\nconst EEPM1 = 1 << 5;\r\nexport class AVREEPROM {\r\n    constructor(cpu, backend, config = eepromConfig) {\r\n        this.cpu = cpu;\r\n        this.backend = backend;\r\n        this.config = config;\r\n        /**\r\n         * Used to keep track on the last write to EEMPE. From the datasheet:\r\n         * The EEMPE bit determines whether setting EEPE to one causes the EEPROM to be written.\r\n         * When EEMPE is set, setting EEPE within four clock cycles will write data to the EEPROM\r\n         * at the selected address If EEMPE is zero, setting EEPE will have no effect.\r\n         */\r\n        this.writeEnabledCycles = 0;\r\n        this.writeCompleteCycles = 0;\r\n        // Interrupts\r\n        this.EER = {\r\n            address: this.config.eepromReadyInterrupt,\r\n            flagRegister: this.config.EECR,\r\n            flagMask: EEPE,\r\n            enableRegister: this.config.EECR,\r\n            enableMask: EERIE,\r\n            constant: true,\r\n            inverseFlag: true,\r\n        };\r\n        this.cpu.writeHooks[this.config.EECR] = (eecr) => {\r\n            const { EEARH, EEARL, EECR, EEDR } = this.config;\r\n            const addr = (this.cpu.data[EEARH] << 8) | this.cpu.data[EEARL];\r\n            if (eecr & EERE) {\r\n                this.cpu.clearInterrupt(this.EER);\r\n            }\r\n            if (eecr & EEMPE) {\r\n                const eempeCycles = 4;\r\n                this.writeEnabledCycles = this.cpu.cycles + eempeCycles;\r\n                this.cpu.addClockEvent(() => {\r\n                    this.cpu.data[EECR] &= ~EEMPE;\r\n                }, eempeCycles);\r\n            }\r\n            // Read\r\n            if (eecr & EERE) {\r\n                this.cpu.data[EEDR] = this.backend.readMemory(addr);\r\n                // When the EEPROM is read, the CPU is halted for four cycles before the\r\n                // next instruction is executed.\r\n                this.cpu.cycles += 4;\r\n                return true;\r\n            }\r\n            // Write\r\n            if (eecr & EEPE) {\r\n                //  If EEMPE is zero, setting EEPE will have no effect.\r\n                if (this.cpu.cycles >= this.writeEnabledCycles) {\r\n                    return true;\r\n                }\r\n                // Check for write-in-progress\r\n                if (this.cpu.cycles < this.writeCompleteCycles) {\r\n                    return true;\r\n                }\r\n                const eedr = this.cpu.data[EEDR];\r\n                this.writeCompleteCycles = this.cpu.cycles;\r\n                // Erase\r\n                if (!(eecr & EEPM1)) {\r\n                    this.backend.eraseMemory(addr);\r\n                    this.writeCompleteCycles += this.config.eraseCycles;\r\n                }\r\n                // Write\r\n                if (!(eecr & EEPM0)) {\r\n                    this.backend.writeMemory(addr, eedr);\r\n                    this.writeCompleteCycles += this.config.writeCycles;\r\n                }\r\n                this.cpu.data[EECR] |= EEPE;\r\n                this.cpu.addClockEvent(() => {\r\n                    this.cpu.setInterruptFlag(this.EER);\r\n                }, this.writeCompleteCycles - this.cpu.cycles);\r\n                // When EEPE has been set, the CPU is halted for two cycles before the\r\n                // next instruction is executed.\r\n                this.cpu.cycles += 2;\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n    }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\n// Register bits:\r\nconst TWCR_TWINT = 0x80; // TWI Interrupt Flag\r\nconst TWCR_TWEA = 0x40; // TWI Enable Acknowledge Bit\r\nconst TWCR_TWSTA = 0x20; // TWI START Condition Bit\r\nconst TWCR_TWSTO = 0x10; // TWI STOP Condition Bit\r\nconst TWCR_TWWC = 0x8; //TWI Write Collision Flag\r\nconst TWCR_TWEN = 0x4; //  TWI Enable Bit\r\nconst TWCR_TWIE = 0x1; // TWI Interrupt Enable\r\nconst TWSR_TWS_MASK = 0xf8; // TWI Status\r\nconst TWSR_TWPS1 = 0x2; // TWI Prescaler Bits\r\nconst TWSR_TWPS0 = 0x1; // TWI Prescaler Bits\r\nconst TWSR_TWPS_MASK = TWSR_TWPS1 | TWSR_TWPS0; // TWI Prescaler mask\r\nconst TWAR_TWA_MASK = 0xfe; //  TWI (Slave) Address Register\r\nconst TWAR_TWGCE = 0x1; // TWI General Call Recognition Enable Bit\r\nconst STATUS_BUS_ERROR = 0x0;\r\nconst STATUS_TWI_IDLE = 0xf8;\r\n// Master states\r\nconst STATUS_START = 0x08;\r\nconst STATUS_REPEATED_START = 0x10;\r\nconst STATUS_SLAW_ACK = 0x18;\r\nconst STATUS_SLAW_NACK = 0x20;\r\nconst STATUS_DATA_SENT_ACK = 0x28;\r\nconst STATUS_DATA_SENT_NACK = 0x30;\r\nconst STATUS_DATA_LOST_ARBITRATION = 0x38;\r\nconst STATUS_SLAR_ACK = 0x40;\r\nconst STATUS_SLAR_NACK = 0x48;\r\nconst STATUS_DATA_RECEIVED_ACK = 0x50;\r\nconst STATUS_DATA_RECEIVED_NACK = 0x58;\r\n// TODO: add slave states\r\n/* eslint-enable @typescript-eslint/no-unused-vars */\r\nexport const twiConfig = {\r\n    twiInterrupt: 0x30,\r\n    TWBR: 0xb8,\r\n    TWSR: 0xb9,\r\n    TWAR: 0xba,\r\n    TWDR: 0xbb,\r\n    TWCR: 0xbc,\r\n    TWAMR: 0xbd,\r\n};\r\n// A simple TWI Event Handler that sends a NACK for all events\r\nexport class NoopTWIEventHandler {\r\n    constructor(twi) {\r\n        this.twi = twi;\r\n    }\r\n    start() {\r\n        this.twi.completeStart();\r\n    }\r\n    stop() {\r\n        this.twi.completeStop();\r\n    }\r\n    connectToSlave() {\r\n        this.twi.completeConnect(false);\r\n    }\r\n    writeByte() {\r\n        this.twi.completeWrite(false);\r\n    }\r\n    readByte() {\r\n        this.twi.completeRead(0xff);\r\n    }\r\n}\r\nexport class AVRTWI {\r\n    constructor(cpu, config, freqHz) {\r\n        this.cpu = cpu;\r\n        this.config = config;\r\n        this.freqHz = freqHz;\r\n        this.eventHandler = new NoopTWIEventHandler(this);\r\n        // Interrupts\r\n        this.TWI = {\r\n            address: this.config.twiInterrupt,\r\n            flagRegister: this.config.TWCR,\r\n            flagMask: TWCR_TWINT,\r\n            enableRegister: this.config.TWCR,\r\n            enableMask: TWCR_TWIE,\r\n        };\r\n        this.updateStatus(STATUS_TWI_IDLE);\r\n        this.cpu.writeHooks[config.TWCR] = (value) => {\r\n            this.cpu.data[config.TWCR] = value;\r\n            const clearInt = value & TWCR_TWINT;\r\n            this.cpu.clearInterruptByFlag(this.TWI, value);\r\n            this.cpu.updateInterruptEnable(this.TWI, value);\r\n            const { status } = this;\r\n            if (clearInt && value & TWCR_TWEN) {\r\n                const twdrValue = this.cpu.data[this.config.TWDR];\r\n                this.cpu.addClockEvent(() => {\r\n                    if (value & TWCR_TWSTA) {\r\n                        this.eventHandler.start(status !== STATUS_TWI_IDLE);\r\n                    }\r\n                    else if (value & TWCR_TWSTO) {\r\n                        this.eventHandler.stop();\r\n                    }\r\n                    else if (status === STATUS_START || status === STATUS_REPEATED_START) {\r\n                        this.eventHandler.connectToSlave(twdrValue >> 1, twdrValue & 0x1 ? false : true);\r\n                    }\r\n                    else if (status === STATUS_SLAW_ACK || status === STATUS_DATA_SENT_ACK) {\r\n                        this.eventHandler.writeByte(twdrValue);\r\n                    }\r\n                    else if (status === STATUS_SLAR_ACK || status === STATUS_DATA_RECEIVED_ACK) {\r\n                        const ack = !!(value & TWCR_TWEA);\r\n                        this.eventHandler.readByte(ack);\r\n                    }\r\n                }, 0);\r\n                return true;\r\n            }\r\n        };\r\n    }\r\n    get prescaler() {\r\n        switch (this.cpu.data[this.config.TWSR] & TWSR_TWPS_MASK) {\r\n            case 0:\r\n                return 1;\r\n            case 1:\r\n                return 4;\r\n            case 2:\r\n                return 16;\r\n            case 3:\r\n                return 64;\r\n        }\r\n        // We should never get here:\r\n        throw new Error('Invalid prescaler value!');\r\n    }\r\n    get sclFrequency() {\r\n        return this.freqHz / (16 + 2 * this.cpu.data[this.config.TWBR] * this.prescaler);\r\n    }\r\n    completeStart() {\r\n        this.updateStatus(this.status === STATUS_TWI_IDLE ? STATUS_START : STATUS_REPEATED_START);\r\n    }\r\n    completeStop() {\r\n        this.cpu.data[this.config.TWCR] &= ~TWCR_TWSTO;\r\n        this.updateStatus(STATUS_TWI_IDLE);\r\n    }\r\n    completeConnect(ack) {\r\n        if (this.cpu.data[this.config.TWDR] & 0x1) {\r\n            this.updateStatus(ack ? STATUS_SLAR_ACK : STATUS_SLAR_NACK);\r\n        }\r\n        else {\r\n            this.updateStatus(ack ? STATUS_SLAW_ACK : STATUS_SLAW_NACK);\r\n        }\r\n    }\r\n    completeWrite(ack) {\r\n        this.updateStatus(ack ? STATUS_DATA_SENT_ACK : STATUS_DATA_SENT_NACK);\r\n    }\r\n    completeRead(value) {\r\n        const ack = !!(this.cpu.data[this.config.TWCR] & TWCR_TWEA);\r\n        this.cpu.data[this.config.TWDR] = value;\r\n        this.updateStatus(ack ? STATUS_DATA_RECEIVED_ACK : STATUS_DATA_RECEIVED_NACK);\r\n    }\r\n    get status() {\r\n        return this.cpu.data[this.config.TWSR] & TWSR_TWS_MASK;\r\n    }\r\n    updateStatus(value) {\r\n        const { TWSR } = this.config;\r\n        this.cpu.data[TWSR] = (this.cpu.data[TWSR] & ~TWSR_TWS_MASK) | value;\r\n        this.cpu.setInterruptFlag(this.TWI);\r\n    }\r\n}\r\n","// Register bits:\r\nconst SPCR_SPIE = 0x80; //  SPI Interrupt Enable\r\nconst SPCR_SPE = 0x40; // SPI Enable\r\nconst SPCR_DORD = 0x20; // Data Order\r\nconst SPCR_MSTR = 0x10; //  Master/Slave Select\r\nconst SPCR_CPOL = 0x8; // Clock Polarity\r\nconst SPCR_CPHA = 0x4; // Clock Phase\r\nconst SPCR_SPR1 = 0x2; // SPI Clock Rate Select 1\r\nconst SPCR_SPR0 = 0x1; // SPI Clock Rate Select 0\r\nconst SPSR_SPR_MASK = SPCR_SPR1 | SPCR_SPR0;\r\nconst SPSR_SPIF = 0x80; // SPI Interrupt Flag\r\nconst SPSR_WCOL = 0x40; // Write COLlision Flag\r\nconst SPSR_SPI2X = 0x1; // Double SPI Speed Bit\r\nexport const spiConfig = {\r\n    spiInterrupt: 0x22,\r\n    SPCR: 0x4c,\r\n    SPSR: 0x4d,\r\n    SPDR: 0x4e,\r\n};\r\nconst bitsPerByte = 8;\r\nexport class AVRSPI {\r\n    constructor(cpu, config, freqHz) {\r\n        this.cpu = cpu;\r\n        this.config = config;\r\n        this.freqHz = freqHz;\r\n        this.onTransfer = null;\r\n        this.transmissionActive = false;\r\n        this.receivedByte = 0;\r\n        // Interrupts\r\n        this.SPI = {\r\n            address: this.config.spiInterrupt,\r\n            flagRegister: this.config.SPSR,\r\n            flagMask: SPSR_SPIF,\r\n            enableRegister: this.config.SPCR,\r\n            enableMask: SPCR_SPIE,\r\n        };\r\n        const { SPCR, SPSR, SPDR } = config;\r\n        cpu.writeHooks[SPDR] = (value) => {\r\n            var _a, _b;\r\n            if (!(cpu.data[SPCR] & SPCR_SPE)) {\r\n                // SPI not enabled, ignore write\r\n                return;\r\n            }\r\n            // Write collision\r\n            if (this.transmissionActive) {\r\n                cpu.data[SPSR] |= SPSR_WCOL;\r\n                return true;\r\n            }\r\n            // Clear write collision / interrupt flags\r\n            cpu.data[SPSR] &= ~SPSR_WCOL;\r\n            this.cpu.clearInterrupt(this.SPI);\r\n            this.receivedByte = (_b = (_a = this.onTransfer) === null || _a === void 0 ? void 0 : _a.call(this, value)) !== null && _b !== void 0 ? _b : 0;\r\n            const cyclesToComplete = this.clockDivider * bitsPerByte;\r\n            this.transmissionActive = true;\r\n            this.cpu.addClockEvent(() => {\r\n                this.cpu.data[SPDR] = this.receivedByte;\r\n                this.cpu.setInterruptFlag(this.SPI);\r\n                this.transmissionActive = false;\r\n            }, cyclesToComplete);\r\n            return true;\r\n        };\r\n        cpu.writeHooks[SPSR] = (value) => {\r\n            this.cpu.data[SPSR] = value;\r\n            this.cpu.clearInterruptByFlag(this.SPI, value);\r\n        };\r\n    }\r\n    reset() {\r\n        this.transmissionActive = false;\r\n        this.receivedByte = 0;\r\n    }\r\n    get isMaster() {\r\n        return this.cpu.data[this.config.SPCR] & SPCR_MSTR ? true : false;\r\n    }\r\n    get dataOrder() {\r\n        return this.cpu.data[this.config.SPCR] & SPCR_DORD ? 'lsbFirst' : 'msbFirst';\r\n    }\r\n    get spiMode() {\r\n        const CPHA = this.cpu.data[this.config.SPCR] & SPCR_CPHA;\r\n        const CPOL = this.cpu.data[this.config.SPCR] & SPCR_CPOL;\r\n        return ((CPHA ? 2 : 0) | (CPOL ? 1 : 0));\r\n    }\r\n    /**\r\n     * The clock divider is only relevant for Master mode\r\n     */\r\n    get clockDivider() {\r\n        const base = this.cpu.data[this.config.SPSR] & SPSR_SPI2X ? 2 : 4;\r\n        switch (this.cpu.data[this.config.SPCR] & SPSR_SPR_MASK) {\r\n            case 0b00:\r\n                return base;\r\n            case 0b01:\r\n                return base * 4;\r\n            case 0b10:\r\n                return base * 16;\r\n            case 0b11:\r\n                return base * 32;\r\n        }\r\n        // We should never get here:\r\n        throw new Error('Invalid divider value!');\r\n    }\r\n    /**\r\n     * The SPI freqeuncy is only relevant to Master mode.\r\n     * In slave mode, the frequency can be as high as F(osc) / 4.\r\n     */\r\n    get spiFrequency() {\r\n        return this.freqHz / this.clockDivider;\r\n    }\r\n}\r\n","/**\r\n * AVR8 Clock\r\n * Part of AVR8js\r\n * Reference: http://ww1.microchip.com/downloads/en/DeviceDoc/ATmega48A-PA-88A-PA-168A-PA-328-P-DS-DS40002061A.pdf\r\n *\r\n * Copyright (C) 2020, Uri Shaked\r\n */\r\nconst CLKPCE = 128;\r\nexport const clockConfig = {\r\n    CLKPR: 0x61,\r\n};\r\nconst prescalers = [\r\n    1,\r\n    2,\r\n    4,\r\n    8,\r\n    16,\r\n    32,\r\n    64,\r\n    128,\r\n    256,\r\n    // The following values are \"reserved\" according to the datasheet, so we measured\r\n    // with a scope to figure them out (on ATmega328p)\r\n    2,\r\n    4,\r\n    8,\r\n    16,\r\n    32,\r\n    64,\r\n    128,\r\n];\r\nexport class AVRClock {\r\n    constructor(cpu, baseFreqHz, config = clockConfig) {\r\n        this.cpu = cpu;\r\n        this.baseFreqHz = baseFreqHz;\r\n        this.config = config;\r\n        this.clockEnabledCycles = 0;\r\n        this.prescalerValue = 1;\r\n        this.cyclesDelta = 0;\r\n        this.cpu.writeHooks[this.config.CLKPR] = (clkpr) => {\r\n            if ((!this.clockEnabledCycles || this.clockEnabledCycles < cpu.cycles) && clkpr === CLKPCE) {\r\n                this.clockEnabledCycles = this.cpu.cycles + 4;\r\n            }\r\n            else if (this.clockEnabledCycles && this.clockEnabledCycles >= cpu.cycles) {\r\n                this.clockEnabledCycles = 0;\r\n                const index = clkpr & 0xf;\r\n                const oldPrescaler = this.prescalerValue;\r\n                this.prescalerValue = prescalers[index];\r\n                this.cpu.data[this.config.CLKPR] = index;\r\n                if (oldPrescaler !== this.prescalerValue) {\r\n                    this.cyclesDelta =\r\n                        (cpu.cycles + this.cyclesDelta) * (oldPrescaler / this.prescalerValue) - cpu.cycles;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n    }\r\n    get frequency() {\r\n        return this.baseFreqHz / this.prescalerValue;\r\n    }\r\n    get prescaler() {\r\n        return this.prescalerValue;\r\n    }\r\n    get timeNanos() {\r\n        return ((this.cpu.cycles + this.cyclesDelta) / this.frequency) * 1e9;\r\n    }\r\n    get timeMicros() {\r\n        return ((this.cpu.cycles + this.cyclesDelta) / this.frequency) * 1e6;\r\n    }\r\n    get timeMillis() {\r\n        return ((this.cpu.cycles + this.cyclesDelta) / this.frequency) * 1e3;\r\n    }\r\n}\r\n","/**\r\n * AVR8js\r\n *\r\n * Copyright (C) 2019, 2020, Uri Shaked\r\n */\r\nexport { CPU } from './cpu/cpu';\r\nexport { avrInstruction } from './cpu/instruction';\r\nexport { avrInterrupt } from './cpu/interrupt';\r\nexport { AVRTimer, timer0Config, timer1Config, timer2Config, } from './peripherals/timer';\r\nexport { AVRIOPort, portAConfig, portBConfig, portCConfig, portDConfig, portEConfig, portFConfig, portGConfig, portHConfig, portJConfig, portKConfig, portLConfig, PinState, } from './peripherals/gpio';\r\nexport { AVRUSART, usart0Config } from './peripherals/usart';\r\nexport { AVREEPROM, EEPROMMemoryBackend, eepromConfig, } from './peripherals/eeprom';\r\nexport * from './peripherals/twi';\r\nexport { spiConfig, AVRSPI } from './peripherals/spi';\r\nexport { AVRClock, clockConfig } from './peripherals/clock';\r\n","/**\r\n * Minimal Intel HEX loader\r\n * Part of AVR8js\r\n *\r\n * Copyright (C) 2019, Uri Shaked\r\n */\r\n\r\n export function loadHex(source, target) {\r\n    for (const line of source.split('\\n')) {\r\n      if (line[0] === ':' && line.substr(7, 2) === '00') {\r\n        const bytes = parseInt(line.substr(1, 2), 16);\r\n        const addr = parseInt(line.substr(3, 4), 16);\r\n        for (let i = 0; i < bytes; i++) {\r\n          target[addr + i] = parseInt(line.substr(9 + i * 2, 2), 16);\r\n        }\r\n      }\r\n    }\r\n  }","import * as avr8js from 'avr8js';\r\nimport { loadHex } from './intelhex';\r\n\r\nclass Emulator {\r\n    constructor(leds, button) {\r\n        this.frameId;\r\n        this.cpu;\r\n        this.timer0;\r\n        this.portA;\r\n        this.portB;\r\n        this.portC;\r\n        this.portD;\r\n        this.cache;\r\n\r\n        this.program = new Uint16Array();\r\n        this.clockFrequency = 16000000;\r\n        this.flashSize = 32768;\r\n        this.leds = leds;\r\n        this.button = button;\r\n    }\r\n\r\n    loadGame(hex) {\r\n        const temp = new Uint8Array(this.flashSize / 2);\r\n        loadHex(hex, temp);\r\n        this.program = new Uint16Array(temp.buffer);\r\n        this.cpu = new avr8js.CPU(this.program);\r\n\r\n        this.timer0 = new avr8js.AVRTimer(this.cpu, avr8js.timer0Config);\r\n        this.usart = new avr8js.AVRUSART(this.cpu, avr8js.usart0Config, this.clockFrequency);\r\n\r\n        this.initPorts();\r\n        this.initSerialCommunication();\r\n        this.enableAnalogRead();\r\n    }\r\n\r\n    initPorts() {\r\n        this.portA = new avr8js.AVRIOPort(this.cpu, avr8js.portAConfig);\r\n        this.portB = new avr8js.AVRIOPort(this.cpu, avr8js.portBConfig);\r\n        this.portC = new avr8js.AVRIOPort(this.cpu, avr8js.portCConfig);\r\n        this.portD = new avr8js.AVRIOPort(this.cpu, avr8js.portDConfig);\r\n\r\n        this.button.state = avr8js.PinState.Low;\r\n        this.button.domElement.addEventListener('mousedown', () => this.buttonPressHandler());\r\n        this.button.domElement.addEventListener('mouseup', () => this.buttonReleaseHandler());\r\n        this.button.domElement.addEventListener('mouseleave', () => this.buttonReleaseHandler());\r\n\r\n        this.portA.addListener(() => {\r\n            this.ledHandler('portA');\r\n        });\r\n\r\n        this.portB.addListener(() => {\r\n            this.ledHandler('portB');\r\n        });\r\n\r\n        this.portC.addListener(() => {\r\n            this.ledHandler('portC');\r\n        });\r\n\r\n        this.portD.addListener(() => {\r\n            this.ledHandler('portD');\r\n        });\r\n    }\r\n\r\n    initSerialCommunication() {\r\n        this.cache = ''; \r\n        this.usart.onByteTransmit = (rawvalue) => {\r\n            const value = String.fromCharCode(rawvalue);\r\n            if(value == '\\n') {\r\n                console.log(this.cache);\r\n                this.cache = '';\r\n                return;\r\n            }\r\n\r\n            this.cache += value;\r\n        };\r\n    }\r\n\r\n    enableAnalogRead() {\r\n        //NOTE: AVR8JS is still working on a proper way to populate the registers used by analogRead\r\n        //https://github.com/wokwi/avr8js/issues/13\r\n        //The current code is the lowlevel solution the avr8js team came up with, it takes care of all invocations of analogRead()\r\n        //https://stackblitz.com/edit/avr8js-simon-game?file=execute.ts\r\n        \r\n        // Simulate analog port (so that analogRead() eventually return)\r\n        this.cpu.writeHooks[0x7a] = value => {\r\n            if (value & (1 << 6)) {\r\n            this.cpu.data[0x7a] = value & ~(1 << 6); // clear bit - conversion done\r\n            // random value\r\n            const analogValue = Math.floor(Math.random() * 1024);\r\n            this.cpu.data[0x78] = analogValue & 0xff;\r\n            this.cpu.data[0x79] = (analogValue >> 8) & 0x3;\r\n            return true; // don't update\r\n            }\r\n        };\r\n    }\r\n\r\n    buttonPressHandler() {\r\n        this[this.button.avrPort].setPin(this.button.avrPin, avr8js.PinState.High);\r\n        this.button.state = avr8js.PinState.High;\r\n    }\r\n\r\n    buttonReleaseHandler() {\r\n        if(this[this.button.avrPort].pinState(this.button.avrPin) != avr8js.PinState.Low) {\r\n            this[this.button.avrPort].setPin(this.button.avrPin, avr8js.PinState.Low);\r\n            this.button.state = avr8js.PinState.Low;\r\n        }\r\n    }\r\n\r\n    ledHandler(port) {\r\n        const connectedLeds = this.leds.filter((led) => {\r\n            return led.avrPort == port;\r\n        });\r\n\r\n        for(let led of connectedLeds) {\r\n            if(this[port].pinState(led.avrPin) === avr8js.PinState.High) {\r\n                led.domElement.classList.remove('off');\r\n                led.domElement.classList.add('on');\r\n                led.state = true;\r\n                continue;\r\n            }\r\n\r\n            led.domElement.classList.remove('on');\r\n            led.domElement.classList.add('off');\r\n            led.state = false;\r\n        }\r\n    }\r\n\r\n    executeGame() {\r\n        const deadline = this.cpu.cycles + (this.clockFrequency / 60); \r\n        while(this.cpu.cycles <= deadline) {\r\n            avr8js.avrInstruction(this.cpu);\r\n            this.cpu.tick();\r\n        }\r\n\r\n        this.frameId = requestAnimationFrame(() => this.executeGame());\r\n    }\r\n\r\n    stopGame() {\r\n        cancelAnimationFrame(this.frameId);\r\n        for(let led of this.leds) {\r\n            if(led.state) {\r\n                led.domElement.classList.remove('on');\r\n                led.domElement.classList.add('off');\r\n                led.state = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nwindow.Emulator = Emulator;\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}